#!/usr/bin/python

__author__ = 'Elisabetta Ronchieri'

import datetime
import time
import sys
import os
import unittest
import getopt
from tstorm.utils import settings as st
from tstorm.test import regressiontest as rt
from tstorm.test import functionalities as fu
from tstorm.test import utilities as ut

def usage():
    print "Usage:  python testsutie.py [-c|--conf] [-d|--destfile]"
    print """Example: python testsutie.py -c tstorm.ini -d /qui/quo/qua"""

def conf_test_suite(conf, ifn, dfn, bifn):
  s = unittest.TestSuite()
  s.addTest(ut.UtilitiesTest('test_settings',conf, ifn, dfn, bifn))

  return s

def update_free_space_upon_rm(conf, ifn, dfn, bifn):
  s = unittest.TestSuite()
  s.addTest(ut.UtilitiesTest('test_dd',conf, ifn, dfn, bifn))
  s.addTest(rt.RegressionTest('test_update_free_space_upon_rm',conf, ifn, dfn, bifn))
  s.addTest(ut.UtilitiesTest('test_rm_lf',conf, ifn, dfn, bifn))

  return s

def eight_digit_string_checksum_rts(conf, ifn, dfn, bifn):
  s = unittest.TestSuite()
  s.addTest(ut.UtilitiesTest('test_dd',conf, ifn, dfn, bifn))
  s.addTest(rt.RegressionTest('test_eight_digit_string_checksum',conf, ifn, dfn, bifn))
  s.addTest(ut.UtilitiesTest('test_rm_lf',conf, ifn, dfn, bifn))
  
  return s

def update_used_space_upon_pd(conf, ifn, dfn, bifn):
  s = unittest.TestSuite()
  s.addTest(ut.UtilitiesTest('test_dd',conf, ifn, dfn, bifn))
  s.addTest(rt.RegressionTest('test_update_used_space_upon_pd',conf, ifn, dfn, bifn))
  s.addTest(ut.UtilitiesTest('test_rm_lf',conf, ifn, dfn, bifn))

  return s

def unsupported_protocols(conf, ifn, dfn, bifn):
  s = unittest.TestSuite()
  s.addTest(ut.UtilitiesTest('test_dd',conf, ifn, dfn, bifn))
  s.addTest(rt.RegressionTest('test_unsupported_protocols',conf, ifn, dfn, bifn))
  s.addTest(ut.UtilitiesTest('test_rm_lf',conf, ifn, dfn, bifn))

  return s

def protocols(conf, ifn, dfn, bifn):
  s = unittest.TestSuite()
  s.addTest(ut.UtilitiesTest('test_dd',conf, ifn, dfn, bifn))
  s.addTest(rt.RegressionTest('test_both_sup_and_uns_protocols',conf, ifn, dfn, bifn, 'gsiftp, file'))
  s.addTest(ut.UtilitiesTest('test_rm_lf',conf, ifn, dfn, bifn))

  return s

if __name__ == '__main__':
  tfn = '/etc/tstorm/tstorm.ini'

  try:
    opts, args = getopt.getopt(sys.argv[1:], "hc:d:", ["help","conf","destfile"])
  except getopt.GetoptError, err:
    print str(err)
    usage()
    sys.exit(2)
  
  n_df = False
  for o, v in opts:
    if o in ("-h", "--help"):
      usage()
      sys.exit()
    elif o in ("-c", "--conf"):
      tfn = v
    elif o in ("-d", "--destfile"):
      n_dfn = v
      n_df = True
    else:
      assert False, "unhandled option"

  ifn,dfn,back_ifn= st.set_filenames(n_df,n_dfn)
  runner = unittest.TextTestRunner(verbosity=2).run(conf_test_suite(tfn,ifn,dfn,back_ifn))

  ifn,dfn,back_ifn= st.set_filenames(n_df,n_dfn)
  runner = unittest.TextTestRunner(verbosity=2).run(update_free_space_upon_rm(tfn,ifn,dfn,back_ifn))

  ifn,dfn,back_ifn= st.set__filenames(n_df,n_dfn)
  runner = unittest.TextTestRunner(verbosity=2).run(eight_digit_string_checksum_rts(tfn,ifn,dfn,back_ifn))

  ifn,dfn,back_ifn= st.set_filenames(n_df,n_dfn)
  runner = unittest.TextTestRunner(verbosity=2).run(update_used_space_upon_pd(tfn,ifn,dfn,back_ifn))
 
  ifn,dfn,back_ifn= st.set_filenames(n_df,n_dfn)
  runner = unittest.TextTestRunner(verbosity=2).run(unsupported_protocols(tfn,ifn,dfn,back_ifn))

  ifn,dfn,back_ifn= st.set_filenames(n_df,n_dfn)
  runner = unittest.TextTestRunner(verbosity=2).run(protocols(tfn,ifn,dfn,back_ifn)) 
