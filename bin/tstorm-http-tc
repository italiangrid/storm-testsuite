#!/usr/bin/python

__author__ = 'Elisabetta Ronchieri'

import datetime
import time
import sys
import os
import unittest
import getopt
from tstorm.test import https as h
from tstorm.test import functionalities as fu
from tstorm.test import utilities as ut

def usage():
    print "Usage:  python testsutie.py [-c|--conf] [-d|--destfile] [--voms]"
    print """Example: python testsutie.py -c tstorm.ini -d /qui/quo/qua --voms"""

def conf_test_suite(conf, ifn, dfn, bifn):
  s = unittest.TestSuite()
  s.addTest(ut.UtilitiesTest('test_settings',conf, ifn, dfn, bifn))

  return s

def cs_test_suite(conf, ifn, dfn, bifn):
  s = unittest.TestSuite()
  s.addTest(fu.FunctionalitiesTest('test_storm_ping',conf, ifn, dfn, bifn))

  return s

def http_test_suite(conf, ifn, dfn, bifn):
  s = unittest.TestSuite()
  s.addTest(ut.UtilitiesTest('test_cr_lf',conf, ifn, dfn, bifn))
  s.addTest(h.HttpsTest('test_srm_transfer_outbound_http', conf, ifn, dfn, bifn, 'http'))
  s.addTest(h.HttpsTest('test_direct_transfer_outbound_http', conf, ifn, dfn, bifn, 'http'))
  s.addTest(h.HttpsTest('test_direct_transfer_outbound_http_exist_file', conf, ifn, dfn, bifn, 'http'))
  s.addTest(h.HttpsTest('test_direct_transfer_inbound_http', conf, ifn, dfn, bifn, 'http'))
  s.addTest(h.HttpsTest('test_direct_transfer_inbound_http_unexist_file', conf, ifn, dfn, bifn, 'http'))
  s.addTest(h.HttpsTest('test_srm_transfer_inbound_http',conf, ifn, dfn, bifn, 'http'))
  s.addTest(ut.UtilitiesTest('test_rm_lf',conf, ifn, dfn, bifn))
  
  return s

def https_test_suite(conf, ifn, dfn, bifn):
  s = unittest.TestSuite()
  s.addTest(ut.UtilitiesTest('test_cr_lf',conf, ifn, dfn, bifn))
  s.addTest(h.HttpsTest('test_srm_transfer_outbound_https', conf, ifn, dfn, bifn, 'https'))
  s.addTest(h.HttpsTest('test_direct_transfer_outbound_https', conf, ifn, dfn, bifn, 'https'))
  s.addTest(h.HttpsTest('test_direct_transfer_outbound_https_exist_file', conf, ifn, dfn, bifn, 'https'))
  s.addTest(h.HttpsTest('test_direct_transfer_inbound_https', conf, ifn, dfn, bifn, 'https'))
  s.addTest(h.HttpsTest('test_direct_transfer_inbound_https_no_auth', conf, ifn, dfn, bifn, 'https'))
  s.addTest(h.HttpsTest('test_direct_transfer_inbound_https_unexist_file', conf, ifn, dfn, bifn, 'https'))
  s.addTest(h.HttpsTest('test_srm_transfer_inbound_https',conf, ifn, dfn, bifn, 'https'))
  s.addTest(ut.UtilitiesTest('test_rm_lf',conf, ifn, dfn, bifn))

  return s

def https_voms_test_suite(conf, ifn, dfn, bifn):
  s = unittest.TestSuite()
  s.addTest(ut.UtilitiesTest('test_cr_lf',conf, ifn, dfn, bifn))
  s.addTest(h.HttpsTest('test_srm_transfer_outbound_https_voms', conf, ifn, dfn, bifn, 'https', True))
  s.addTest(h.HttpsTest('test_direct_transfer_outbound_https_voms', conf, ifn, dfn, bifn, 'https'))
  s.addTest(h.HttpsTest('test_direct_transfer_outbound_https_voms_exist_file', conf, ifn, dfn, bifn, 'https'))
  s.addTest(h.HttpsTest('test_direct_transfer_inbound_https_voms', conf, ifn, dfn, bifn, 'https'))
  s.addTest(h.HttpsTest('test_direct_transfer_inbound_https_voms_no_auth', conf, ifn, dfn, bifn, 'https'))
  s.addTest(h.HttpsTest('test_direct_transfer_inbound_https_voms_unexist_file', conf, ifn, dfn, bifn, 'https'))
  s.addTest(h.HttpsTest('test_srm_transfer_inbound_https_voms',conf, ifn, dfn, bifn, 'https', True))
  s.addTest(ut.UtilitiesTest('test_rm_lf',conf, ifn, dfn, bifn))

  return s

if __name__ == '__main__':
  tfn = '/etc/tstorm/tstorm.ini'

  t=datetime.datetime.now()
  ts=str(time.mktime(t.timetuple()))
  ifn = '/tmp/tstorm-input-file-' + ts + '.txt'
  dfn = '/tstorm-output-file-' + ts + '.txt'
  back_ifn = '/tmp/tstorm-back-input-file-' + ts + '.txt'

  try:
    opts, args = getopt.getopt(sys.argv[1:], "hc:d:", ["help","voms","conf","destfile"])
  except getopt.GetoptError, err:
    print str(err)
    usage()
    sys.exit(2)
 
  voms = False 
  n_df = False
  for o, v in opts:
    if o in ("-h", "--help"):
      usage()
      sys.exit()
    elif o in ("-c", "--conf"):
      tfn = v
    elif o in ("-d", "--destfile"):
      n_dfn = v
      n_df = True
    elif o in ("--voms"):
      voms = True
    else:
      assert False, "unhandled option"

  if n_df:
    t=datetime.datetime.now()
    ts=str(time.mktime(t.timetuple()))
    if '/' in n_dfn:
      dfn = '/'
      tmp_d = os.path.dirname(n_dfn).split('/')[1:]
      for x in tmp_d:
        dfn = dfn + x + ts + '/'
      dfn = dfn + os.path.basename(n_dfn) + '.' + ts

  runner = unittest.TextTestRunner(verbosity=2).run(conf_test_suite(tfn,ifn,dfn,back_ifn))
  runner = unittest.TextTestRunner(verbosity=2).run(cs_test_suite(tfn,ifn,dfn,back_ifn))
  runner = unittest.TextTestRunner(verbosity=2).run(http_test_suite(tfn,ifn,dfn,back_ifn))
  runner = unittest.TextTestRunner(verbosity=2).run(https_test_suite(tfn,ifn,dfn,back_ifn))
  if voms:
    runner = unittest.TextTestRunner(verbosity=2).run(https_voms_test_suite(tfn,ifn,dfn,back_ifn))
