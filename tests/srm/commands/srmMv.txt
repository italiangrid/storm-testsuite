*** Settings ***
Resource   lib/stormlib.txt
Resource   lib/clientSRM.txt
Resource   lib/credentials.txt
Resource   lib/lcg_util.txt

*** Test Cases ***

Move file
  [Tags]  storm-client  mv
  [Setup]  Init certificate and voms proxy  test0  ${VOMSAUTH_SA_VONAME}
  ${filename}  Create local file
  ${srcsurl}  Build surl  ${VOMSAUTH_SA}  ${filename}
  ${destsurl}  Build surl  ${VOMSAUTH_SA}  ${filename}.moved
  Copy-out file using lcg-utils  ${filename}  ${srcsurl}
  ${output}  Perform mv using clientSRM  ${srcsurl}  ${destsurl}
  Should Contain  ${output}  SRM_SUCCESS
  ${output}  Perform ls using clientSRM  ${srcsurl}
  Should Not Contain  ${output}  SRM_SUCCESS
  ${output}  Perform ls using clientSRM  ${destsurl}
  Should Contain  ${output}  SRM_SUCCESS
  ${output}  Perform rm using clientSRM  ${destsurl}
  Should Contain  ${output}  SRM_SUCCESS
  Remove local file  ${filename}
  [Teardown]  Clear all credentials

Move file to a destination surl that already exists
  [Tags]  storm-client  mv
  [Setup]  Init certificate and voms proxy  test0  ${VOMSAUTH_SA_VONAME}
  ${filename}  Create local file
  ${srcsurl}  Build surl  ${VOMSAUTH_SA}  ${filename}
  ${destsurl}  Build surl  ${VOMSAUTH_SA}  ${filename}.moved
  Copy-out file using lcg-utils  ${filename}  ${srcsurl}
  Copy-out file using lcg-utils  ${filename}  ${destsurl}
  ${output}  Perform mv using clientSRM  ${srcsurl}  ${destsurl}
  Should Contain  ${output}  SRM_DUPLICATION_ERROR
  ${output}  Perform rm using clientSRM  ${srcsurl}
  Should Contain  ${output}  SRM_SUCCESS
  ${output}  Perform rm using clientSRM  ${destsurl}
  Should Contain  ${output}  SRM_SUCCESS
  Remove local file  ${filename}
  [Teardown]  Clear all credentials

Move file into directory
  [Tags]  storm-client  mv
  [Setup]  Init certificate and voms proxy  test0  ${VOMSAUTH_SA_VONAME}
  ${filename}  Create local file
  ${dstdirname}  Get a unique name
  ${srcfilesurl}  Build surl  ${VOMSAUTH_SA}  ${filename}
  ${destdirsurl}  Build surl  ${VOMSAUTH_SA}  ${dstdirname}
  ${destfilesurl}  Build surl  ${VOMSAUTH_SA}  ${dstdirname}/${filename}
  Copy-out file using lcg-utils  ${filename}  ${srcfilesurl}
  ${output}  Perform mkdir using clientSRM  ${destdirsurl}
  Should Contain  ${output}  SRM_SUCCESS
  ${output}  Perform mv using clientSRM  ${srcfilesurl}  ${destdirsurl}
  Should Contain  ${output}  SRM_SUCCESS
  ${output}  Perform ls using clientSRM  ${destfilesurl}
  Should Contain  ${output}  SRM_SUCCESS
  ${output}  Perform rmdir using clientSRM  ${destdirsurl}  -r
  Should Contain  ${output}  SRM_SUCCESS
  Remove local file  ${filename}
  [Teardown]  Clear all credentials

Move not empty directory on unexistent surl
  [Tags]  storm-client  mv
  [Setup]  Init certificate and voms proxy  test0  ${VOMSAUTH_SA_VONAME}
  ${dirname}  Get a unique name
  ${filename}  Create local file
  ${dirsurl}  Build surl  ${VOMSAUTH_SA}  ${dirname}
  ${filesurl}  Build surl  ${VOMSAUTH_SA}  ${dirname}/${filename}
  ${destdirsurl}  Build surl  ${VOMSAUTH_SA}  ${dirname}.moved
  ${output}  Perform mkdir using clientSRM  ${dirsurl}
  Should Contain  ${output}  SRM_SUCCESS
  Copy-out file using lcg-utils  ${filename}  ${filesurl}
  ${output}  Perform mv using clientSRM  ${dirsurl}  ${destdirsurl}
  Should Contain  ${output}  SRM_SUCCESS
  ${output}  Perform rmdir using clientSRM  ${destdirsurl}  -r
  Should Contain  ${output}  SRM_SUCCESS
  Remove local file  ${filename}
  [Teardown]  Clear all credentials

Move not empty directory on a existent empty directory
  [Tags]  storm-client  mv
  [Setup]  Init certificate and voms proxy  test0  ${VOMSAUTH_SA_VONAME}
  ${dirname}  Get a unique name
  ${filename}  Create local file
  ${dirsurl}  Build surl  ${VOMSAUTH_SA}  ${dirname}
  ${filesurl}  Build surl  ${VOMSAUTH_SA}  ${dirname}/${filename}
  ${destdirsurl}  Build surl  ${VOMSAUTH_SA}  ${dirname}.moved
  ${destfilesurl}  Build surl  ${VOMSAUTH_SA}  ${dirname}.moved/${dirname}/${filename}
  ${output}  Perform mkdir using clientSRM  ${dirsurl}
  Should Contain  ${output}  SRM_SUCCESS  
  Copy-out file using lcg-utils  ${filename}  ${filesurl}
  ${output}  Perform mkdir using clientSRM  ${destdirsurl}
  Should Contain  ${output}  SRM_SUCCESS
  ${output}  Perform mv using clientSRM  ${dirsurl}  ${destdirsurl}
  Should Contain  ${output}  SRM_SUCCESS
  ${output}  Perform ls using clientSRM  ${destfilesurl}
  Should Contain  ${output}  SRM_SUCCESS
  ${output}  Perform rmdir using clientSRM  ${destdirsurl}  -r
  Should Contain  ${output}  SRM_SUCCESS
  Remove local file  ${filename}
  [Teardown]  Clear all credentials

Move not empty directory on a existent surl
  [Tags]  storm-client  mv
  [Setup]  Init certificate and voms proxy  test0  ${VOMSAUTH_SA_VONAME}
  ${dirname}  Get a unique name
  ${filename}  Create local file
  ${dirsurl}  Build surl  ${VOMSAUTH_SA}  ${dirname}
  ${filesurl}  Build surl  ${VOMSAUTH_SA}  ${dirname}/${filename}
  ${destsurl}  Build surl  ${VOMSAUTH_SA}  ${filename}.copied
  ${output}  Perform mkdir using clientSRM  ${dirsurl}
  Should Contain  ${output}  SRM_SUCCESS
  Copy-out file using lcg-utils  ${filename}  ${filesurl}
  Copy-out file using lcg-utils  ${filename}  ${destsurl}
  ${output}  Perform mv using clientSRM  ${dirsurl}  ${destsurl}
  Should Contain  ${output}  SRM_DUPLICATION_ERROR
  ${output}  Perform rmdir using clientSRM  ${dirsurl}  -r
  Should Contain  ${output}  SRM_SUCCESS
  ${output}  Perform rm using clientSRM  ${destsurl}
  Should Contain  ${output}  SRM_SUCCESS
  Remove local file  ${filename}
  [Teardown]  Clear all credentials

Move not empty directory on a existent not empty directory that contains an existent directory with same source name
  [Tags]  storm-client  mv
  [Setup]  Init certificate and voms proxy  test0  ${VOMSAUTH_SA_VONAME}
  ${dirname}  Get a unique name
  ${filename}  Create local file
  ${dirsurl}  Build surl  ${VOMSAUTH_SA}  ${dirname}
  ${filesurl}  Build surl  ${VOMSAUTH_SA}  ${dirname}/${filename}
  ${destdirsurl}  Build surl  ${VOMSAUTH_SA}  ${dirname}.moved
  ${destsubdirsurl}  Build surl  ${VOMSAUTH_SA}  ${dirname}.moved/${dirname}
  ${output}  Perform mkdir using clientSRM  ${dirsurl}
  Should Contain  ${output}  SRM_SUCCESS  
  Copy-out file using lcg-utils  ${filename}  ${filesurl}
  ${output}  Perform mkdir using clientSRM  ${destdirsurl}
  Should Contain  ${output}  SRM_SUCCESS
  ${output}  Perform mkdir using clientSRM  ${destsubdirsurl}
  Should Contain  ${output}  SRM_SUCCESS
  ${output}  Perform mv using clientSRM  ${dirsurl}  ${destdirsurl}
  Should Contain  ${output}  SRM_DUPLICATION_ERROR
  ${output}  Perform rmdir using clientSRM  ${dirsurl}  -r
  Should Contain  ${output}  SRM_SUCCESS
  ${output}  Perform rmdir using clientSRM  ${destdirsurl}  -r
  Should Contain  ${output}  SRM_SUCCESS
  Remove local file  ${filename}
  [Teardown]  Clear all credentials

Move file over itself
  [Tags]  storm-client  mv
  [Setup]  Init certificate and voms proxy  test0  ${VOMSAUTH_SA_VONAME}
  ${filename}  Create local file
  ${srcsurl}  Build surl  ${VOMSAUTH_SA}  ${filename}
  ${destsurl}  Build surl  ${VOMSAUTH_SA}  ${filename}
  Copy-out file using lcg-utils  ${filename}  ${srcsurl}
  ${output}  Perform mv using clientSRM  ${srcsurl}  ${destsurl}
  Should Contain  ${output}  SRM_SUCCESS
  ${output}  Perform rm using clientSRM  ${srcsurl}
  Should Contain  ${output}  SRM_SUCCESS
  Remove local file  ${filename}
  [Teardown]  Clear all credentials

Move file with active ptg
  [Tags]  storm-client  mv
  [Setup]  Init certificate and voms proxy  test0  ${VOMSAUTH_SA_VONAME}
  ${filename}  Create local file
  ${srcsurl}  Build surl  ${VOMSAUTH_SA}  ${filename}
  ${destsurl}  Build surl  ${VOMSAUTH_SA}  ${filename}.moved
  Copy-out file using lcg-utils  ${filename}  ${srcsurl}
  ${output}  ${token}  Perform ptg using clientSRM  ${srcsurl}  -p
  Should Contain  ${output}  SRM_FILE_PINNED
  ${output}  Perform mv using clientSRM  ${srcsurl}  ${destsurl}
  Should Contain  ${output}  SRM_FILE_BUSY
  ${output}  Perform rf using clientSRM  ${srcsurl}  ${token}
  Should Contain  ${output}  SRM_SUCCESS
  ${output}  Perform rm using clientSRM  ${srcsurl}
  Should Contain  ${output}  SRM_SUCCESS
  Remove local file  ${filename}
  [Teardown]  Clear all credentials

Move file with active ptp
  [Tags]  storm-client  mv
  [Setup]  Init certificate and voms proxy  test0  ${VOMSAUTH_SA_VONAME}
  ${filename}  Get a unique name
  ${srcsurl}  Build surl  ${VOMSAUTH_SA}  ${filename}
  ${destsurl}  Build surl  ${VOMSAUTH_SA}  ${filename}.moved
  ${output}  ${token}  Perform ptp using clientSRM  ${srcsurl}  -p
  Should Contain  ${output}  SRM_SPACE_AVAILABLE
  ${output}  Perform mv using clientSRM  ${srcsurl}  ${destsurl}
  Should Contain  ${output}  SRM_FILE_BUSY
  ${output}  Perform pd using clientSRM  ${srcsurl}  ${token}
  Should Contain  ${output}  SRM_SUCCESS
  ${output}  Perform rm using clientSRM  ${srcsurl}
  Should Contain  ${output}  SRM_SUCCESS
  [Teardown]  Clear all credentials

Move file on an unauthorized destination
  [Tags]  storm-client  mv
  [Setup]  Init certificate and voms proxy  test0  ${VOMSAUTH_SA_VONAME}
  ${filename}  Create local file
  ${srcsurl}  Build surl  ${VOMSAUTH_SA}  ${filename}
  ${destsurl}  Build surl  ${VOMSAUTH_SA}  ${filename}
  Copy-out file using lcg-utils  ${filename}  ${srcsurl}
  Init certificate and plain proxy  test0
  ${output}  Perform mv using clientSRM  ${srcsurl}  ${destsurl}
  Should Contain  ${output}  SRM_AUTHORIZATION_FAILURE
  Init certificate and voms proxy  test0  ${VOMSAUTH_SA_VONAME}
  ${output}  Perform rm using clientSRM  ${srcsurl}
  Should Contain  ${output}  SRM_SUCCESS
  Remove local file  ${filename}
  [Teardown]  Clear all credentials

Check unauthorized file move on a different VO
  [Tags]  storm-client  ls
  [Setup]  Init certificate and voms proxy  test0  ${VOMSAUTH_SA_VONAME}
  ${filename}  Create local file
  ${srcsurl}  Build surl  ${VOMSAUTH_SA}  ${filename}
  ${destsurl}  Build surl  ${VOMSAUTH_SA}  ../${VOMSAUTH_SA2}/${filename}
  Copy-out file using lcg-utils  ${filename}  ${srcsurl}
  ${output}  Perform mv using clientSRM  ${srcsurl}  ${destsurl}
  Should Contain  ${output}  SRM_AUTHORIZATION_FAILURE
  ${destsurl}  Build surl  ${VOMSAUTH_SA2}  ../${VOMSAUTH_SA}/${filename}_2
  ${output}  Perform mv using clientSRM  ${srcsurl}  ${destsurl}
  Should Contain  ${output}  SRM_AUTHORIZATION_FAILURE
  ${output}  Perform rm using clientSRM  ${srcsurl}
  Should Contain  ${output}  SRM_SUCCESS
  Remove local file  ${filename}
  [Teardown]  Clear all credentials
