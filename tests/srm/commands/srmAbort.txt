*** Settings ***
Resource   lib/stormlib.txt
Resource   lib/clientSRM.txt
Resource   lib/credentials.txt

*** Test Cases ***

Abort of a prepare to get done on an existent file
  [Tags]  storm-client  abort
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${filename}  Get a unique name
  Put without really putting using clientSRM  ${vo}  ${filename}
  ${surl}  Build surl  ${vo}  ${filename}
  ${output}  ${token}  Perform ptg using clientSRM  ${surl}  -p
  Should Contain  ${output}  SRM_FILE_PINNED
  ${output}  Perform abort request using clientSRM  ${token}
  Should Contain  ${output}  SRM_SUCCESS
  ${output}  Perform sptg using clientSRM  ${surl}  ${token}
  Should Not Contain  ${output}  SRM_FILE_PINNED
  Should Contain  ${output}  SRM_ABORTED
  Perform rm using clientSRM  ${surl}
  Remove local file  ${filename}
  [Teardown]  Clear all credentials

Duplicated ptg abort
  [Tags]  storm-client  abort
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${filename}  Get a unique name
  Put without really putting using clientSRM  ${vo}  ${filename}
  ${surl}  Build surl  ${vo}  ${filename}
  ${output}  ${token}  Perform ptg using clientSRM  ${surl}  -p
  Should Contain  ${output}  SRM_FILE_PINNED
  ${output}  Perform abort request using clientSRM  ${token}
  Should Contain  ${output}  SRM_SUCCESS
  ${output}  Perform abort request using clientSRM  ${token}
  Should Contain  ${output}  SRM_SUCCESS
  ${output}  Perform sptg using clientSRM  ${surl}  ${token}
  Should Not Contain  ${output}  SRM_FILE_PINNED
  Should Contain  ${output}  SRM_ABORTED
  Perform rm using clientSRM  ${surl}
  Remove local file  ${filename}
  [Teardown]  Clear all credentials

Abort multiple files
  [Tags]  storm-client  ptp
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${testdir}  Get a unique name
  ${dirsurl}  Build surl  ${vo}  ${testdir}
  ${output}  Perform mkdir using clientSRM  ${dirsurl}
  Should Contain  ${output}  SRM_SUCCESS
  ${filename}  Get a unique name
  ${surl}  Build surl  ${vo}  ${testdir}/${filename}_1
  ${surllist} =  Set Variable  ${surl}
  :FOR  ${index}  IN RANGE  2  10
  \		${surl}  Build surl  ${vo}  ${testdir}/${filename}_${index}
  \		${surllist}  Catenate  ${surllist}  ${surl}
  Log  ${surllist}
  ${output}  ${token}  Perform ptp using clientSRM  ${surllist}  -p
  Log  ${output}
  Should Contain  ${output}  SRM_SUCCESS
  Should Not Contain  ${output}  SRM_FAILURE
  ${output}  Perform abort file using clientSRM  ${surllist}  ${token}
  Log  ${output}
  Should Contain  ${output}  SRM_SUCCESS
  Should Not Contain  ${output}  SRM_ABORTED
  Should Not Contain  ${output}  SRM_FAILURE
  Remove local file  ${filename}
  Remove local directory  ${testdir}
  [Teardown]  Clear all credentials

Abort request with unexistent token
  [Tags]  storm-client  abort  to-be-fixed
  [Documentation]  Regression test for https://issues.infn.it/jira/browse/STOR-234. Storm BE does not manage correctly abort requests of expired tokens.
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${output}  Perform abort request using clientSRM  fake_token
  Should Contain  ${output}  SRM_INVALID_REQUEST
  [Teardown]  Clear all credentials

Abort after prepare to put
  [Tags]  storm-client  abort
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${filename}  Get a unique name
  ${surl}  Build surl  ${vo}  ${filename}
  ${output}  ${token}  Perform ptp using clientSRM  ${surl}  -p
  Should Contain  ${output}  SRM_SPACE_AVAILABLE
  ${output}  Perform abort request using clientSRM  ${token}
  Should Contain  ${output}  SRM_SUCCESS
  ${output}  Perform ls using clientSRM  ${surl}
  Should Contain  ${output}  SRM_FAILURE
  ${output}  Perform rm using clientSRM  ${surl}
  Should Contain  ${output}  SRM_FAILURE
  Remove local file  ${filename}
  [Teardown]  Clear all credentials

Abort after put done
  [Tags]  storm-client  abort
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${filename}  Get a unique name
  ${surl}  Build surl  ${vo}  ${filename}
  ${output}  ${token}  Perform ptp using clientSRM  ${surl}  -p
  Should Contain  ${output}  SRM_SPACE_AVAILABLE
  ${output}  Perform pd using clientSRM  ${surl}  ${token}
  Should Contain  ${output}  SRM_SUCCESS
  ${output}  Perform abort request using clientSRM  ${token}
  Should Contain  ${output}  SRM_FAILURE
  ${output}  Perform rm using clientSRM  ${surl}
  Should Contain  ${output}  SRM_SUCCESS
  Remove local file  ${filename}
  [Teardown]  Clear all credentials
