*** Settings ***
Resource   lib/stormlib.txt
Resource   lib/clientSRM.txt
Resource   lib/credentials.txt
Resource   lib/lcg_util.txt
Resource   lib/globus_util.txt

*** Test Cases ***

Prepare to get an existent file
  [Tags]  storm-client  ptg
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${filename}  Get a unique name
  Put without really putting using clientSRM  ${vo}  ${filename}
  ${surl}  Build surl  ${vo}  ${filename}
  ${output}  ${token}  Perform ptg using clientSRM  ${surl}
  Should Contain  ${output}  SRM_REQUEST_QUEUED
  ${output}  ${token}  Perform ptg using clientSRM  ${surl}  -t ${token} -p
  Should Contain  ${output}  SRM_FILE_PINNED
  ${output}  Perform rf using clientSRM  ${surl}  ${token}  -p
  Should Contain  ${output}  SRM_SUCCESS
  Should Not Contain  ${output}  SRM_RELEASED
  Should Not Contain  ${output}  SRM_FAILURE
  ${output}  Perform rm using clientSRM  ${surl}
  Should Contain  ${output}  SRM_SUCCESS
  Remove local file  ${filename}
  [Teardown]  Clear all credentials

Prepare to get an unexistent file
  [Tags]  storm-client  ptg
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${filename}  Get a unique name
  ${surl}  Build surl  ${vo}  ${filename}
  ${output}  ${token}  Perform ptg using clientSRM  ${surl}  -p
  Should Contain  ${output}  SRM_INVALID_PATH
  Remove local file  ${filename}
  [Teardown]  Clear all credentials

Check double PtG on a file
  [Tags]  regression  ptg
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${filename}  Get a unique name
  Put without really putting using clientSRM  ${vo}  ${filename}
  ${surl}  Build surl  ${vo}  ${filename}
  ${output}  ${token}  Perform ptg using clientSRM  ${surl}  -p
  Should Contain  ${output}  SRM_FILE_PINNED
  ${output}  ${token}  Perform ptg using clientSRM  ${surl}  -p
  Should Contain  ${output}  SRM_FILE_PINNED
  Perform rm using clientSRM  ${surl}
  Remove local file  ${filename}
  [Teardown]  Clear all credentials

Prepare to get multiple existent file
  [Tags]  storm-client  ptg
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${testdir}  Get a unique name
  ${dirsurl}  Build surl  ${vo}  ${testdir}
  ${output}  Perform mkdir using clientSRM  ${dirsurl}
  Should Contain  ${output}  SRM_SUCCESS
  ${filename}  Create local file
  ${surl}  Build surl  ${vo}  ${testdir}/${filename}_1
  Copy-out file using lcg-utils  ${filename}  ${surl}
  ${surllist} =  Set Variable  ${surl}
  :FOR  ${index}  IN RANGE  2  10
  \		${surl}  Build surl  ${vo}  ${testdir}/${filename}_${index}
  \		Copy-out file using lcg-utils  ${filename}  ${surl}
  \		${surllist}  Catenate  ${surllist}  ${surl}
  \		Log  ${surllist}
  ${output}  ${token}  Perform ptg using clientSRM  ${surllist}  -p
  Log  ${output}
  Should Contain  ${output}  SRM_FILE_PINNED
  Should Not Contain  ${output}  SRM_FAILURE
  ${output}  Perform rf using clientSRM without token  ${surllist}
  Log  ${output}
  Should Contain  ${output}  SRM_SUCCESS
  Should Not Contain  ${output}  SRM_RELEASED
  Should Not Contain  ${output}  SRM_FAILURE
  ${output}  Perform rmdir using clientSRM  ${dirsurl}  -r
  Should Contain  ${output}  SRM_SUCCESS
  Remove local file  ${filename}
  Remove local directory  ${testdir}
  [Teardown]  Clear all credentials

Prepare to get large file
  [Documentation]  Regression test for https://issues.infn.it/jira/browse/STOR-331
  [Tags]  storm-client  ptg
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${filename}  Create local file with fake size  2049
  ${surl}  Build surl  ${vo}  ${filename}
  ${output}  ${token}  Perform ptp using clientSRM  ${surl}  -p
  Should Contain  ${output}  SRM_SPACE_AVAILABLE
  Copy-out file using globus-utils  ${filename}  ${vo}  ${filename}
  ${output}  Perform pd using clientSRM  ${surl}  ${token}  -p
  ${output}  ${token}  Perform ptg using clientSRM  ${surl}  -p
  Should Contain  ${output}  SRM_FILE_PINNED
  Log  ${output}
  Should Contain  ${output}  fileSize=2148532224
  Remove local file  ${filename}
  Perform rf using clientSRM  ${surl}  ${token}
  Perform rm using clientSRM  ${surl}
  Should Contain  ${output}  SRM_SUCCESS
  [Teardown]  Clear all credentials

Unauthorized prepare to get on another VO's file
  [Tags]  storm-client  ls
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${filename}  Create local file
  ${surl}  Build surl  ${vo}  ${filename}
  Copy-out file using lcg-utils  ${filename}  ${surl}
  Init certificate and plain proxy  test0
  ${surl}  Build surl  ${gridproxyRWStorageArea}  ../${vo}/${filename}
  ${output}  ${token}  Perform ptg using clientSRM  ${surl}  -p
  Should Contain  ${output}  SRM_AUTHORIZATION_FAILURE
  Log  ${output}
  Init certificate and voms proxy  test0  ${vo}
  Remove file using clientSRM  ${vo}  ${filename}
  Remove local file  ${filename}
  [Teardown]  Clear all credentials