*** Settings ***
Resource   lib/stormlib.txt
Resource   lib/clientSRM.txt
Resource   lib/dcache.txt
Resource   lib/lcg_util.txt
Resource   lib/credentials.txt
Suite Setup       Create proxies  ${root}
Suite Teardown    Delete proxies

*** Test Cases ***

Check double PtG on a file
  [Tags]  regression  ptg
  ${test_file}  Get a unique name
  Put without really putting using clientSRM  ${root}  ${test_file}
  ${surl}  Build surl  ${root}  ${test_file}
  ${output}  ${token}  Perform ptg using clientSRM  ${surl}  -p
  Should Contain  ${output}  SRM_FILE_PINNED
  ${output}  ${token}  Perform ptg using clientSRM  ${surl}  -p
  Should Contain  ${output}  SRM_FILE_PINNED
  [Teardown]  Perform rm using clientSRM  ${surl}

Check right failure code when invoking PtP/PtP on the same file
  [Tags]   regression  ptp
  ${test_file}  Get a unique name
  ${surl}  Build surl  ${root}  ${test_file}
  ${output}  ${token}  Perform ptp using clientSRM  ${surl}  -p
  Should Contain  ${output}  SRM_SPACE_AVAILABLE
  ${output}  ${token}  Perform ptp using clientSRM  ${surl}  -p
  Log  ${output}
  Should Contain  ${output}  SRM_FILE_BUSY
  [Teardown]  Perform rm using clientSRM  ${surl}

Check right failure code when invoking PtP/pd/PtP on the same file
  [Tags]   regression  ptp  pd
  ${test_file}  Get a unique name
  Put without really putting using clientSRM  ${root}  ${test_file}
  ${surl}  Build surl  ${root}  ${test_file}
  ${output}  ${token}  Perform ptp using clientSRM  ${surl}  -p
  Should Contain  ${output}  SRM_DUPLICATION_ERROR
  [Teardown]  Perform rm using clientSRM  ${surl}

Check if StoRM publishes correctly values for used and free space on the BDII
  [Tags]  regression
  ${test_file}  Create local file
  ${surl}  Build surl  ${root}  ${test_file}
  Check file does not exists using lcg-utils  ${surl}
  Copy-out file using lcg-utils  ${test_file}  ${surl}
  ${size_before}  Get unused size using clientSRM  ${storageAreaToken}
  Log  ${size_before}
  Check file exists using lcg-utils  ${surl}
  Perform rm using clientSRM  ${surl}
  Check file does not exists using lcg-utils  ${surl}
  ${size_after}  Get unused size using clientSRM  ${storageAreaToken}
  Log  ${size_after}
  ${diff_size}  Run  echo `expr ${size_after} - ${size_before}`
  ${file_size}  Run  ls -l /tmp/${test_file} | awk {'print $5'}
  Should be equal  ${file_size}  ${diff_size}

Copy out a file using lcg-utils
  [Tags]  lcg-utils
  ${test_file}  Create local file
  ${surl}  Build surl  ${root}  ${test_file}
  Check file does not exists using lcg-utils  ${surl}
  Copy-out file using lcg-utils  ${test_file}  ${surl}
  Copy-in file using lcg-utils  ${surl}  ${test_file}_copied
  Execute and check success  diff /tmp/${test_file} /tmp/${test_file}_copied
  [Teardown]  Perform rm using clientSRM  ${surl}

Prepare to put using clientSRM
  [Tags]  regression  ptp
  ${filename}  Get a unique name
  ${surl}  Build surl  ${root}  ${filename}
  ${output}  ${token}  Perform ptp using clientSRM  ${surl}  -p
  ${output}  Perform sptp using clientSRM  ${surl}  ${token}
  Should Contain  ${output}  SRM_SPACE_AVAILABLE
  Should Contain  ${output}  srmPrepareToPut successfully handled!
  [Teardown]  Perform rm using clientSRM  ${surl}

Prepare to put on an existent file using clientSRM
  [Tags]  regression  ptp
  ${filename}  Get a unique name
  ${surl}  Build surl  ${root}  ${filename}
  Put without really putting using clientSRM  ${root}  ${filename}
  ${output}  ${token}  Perform ptp using clientSRM  ${surl}  -p
  Should Contain  ${output}  SRM_DUPLICATION_ERROR
  Should Contain  ${output}  Cannot srmPut file because it already exists!
  [Teardown]  Perform rm using clientSRM  ${surl}

Prepare to put using a non existent space token
  [Tags]  regression  ptp
  [Documentation]  Regression test for https://storm.cnaf.infn.it:8443/redmine/issues/282. StoRM used to return the wrong error (SRM_SPACE_LIFETIME_EXPIRED instead of SRM_INVALID_REQUEST) for a sptp when a ptp was given a non existent space token. 
  ${filename}  Get a unique name
  ${surl}  Build surl  ${root}  ${filename}
  ${output}  ${token}  Perform ptp using clientSRM  ${surl}  -p -t whatever
  ${output}  Perform sptp using clientSRM  ${surl}  ${token}
  Should Contain  ${output}  SRM_INVALID_REQUEST
  Should Contain  ${output}  The provided Space Token does not exists
