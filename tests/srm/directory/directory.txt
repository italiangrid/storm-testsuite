*** Settings ***
Resource   lib/stormlib.txt
Resource   lib/dcache.txt
Resource   lib/lcg_util.txt
Resource   lib/clientSRM.txt

*** Test Cases ***

List files in storage area root
  [Tags]  storm-client  ls
  Execute clientSRM Command on Surl  ls  srm://${srmEndpoint}/${root} -c 1

Create and remove a directory using clientSRM
  [Tags]  storm-client  rmdir
  ${dirName}  Get a unique name
  Create directory using clientSRM  ${dirName}
  Remove directory using clientSRM  ${dirName}
	
Create and remove a directory using the dCache client
  [Tags]  dcache-client  rmdir
  ${dirName}  Get a unique name
  Create directory using dCache client  ${dirName}
  Remove directory using clientSRM  ${dirName}
	
Create a directory that already exists using clientSRM
  [Tags]  storm-client  mkdir
  ${dirName}  Get a unique name
  Create directory using clientSRM  ${dirName}
  ${output}  Try to create directory using clientSRM  ${dirName}
  Should Contain  ${output}  SRM_DUPLICATION_ERROR
  Should Contain  ${output}  Directory specified exists!
	[Teardown]  Remove directory using clientSRM  ${dirName}

Create a directory that already exists using the dCache client
  [Tags]  dcache-client  mkdir
  ${dirName}  Get a unique name
  Create directory using clientSRM  ${dirName}
  ${output}  Try to create directory using dCache client  ${dirName}
  Should Contain  ${output}  SRM_DUPLICATION_ERROR
  Should Contain  ${output}  Directory specified exists!
  [Teardown]  Remove directory using clientSRM  ${dirName}

Remove a non existent directory using clientSRM
  [Tags]  storm-client  rmdir
  ${dirName}  Get a unique name
  ${output}  Try to remove directory using clientSRM  ${dirName}
  Should Contain  ${output}  SRM_INVALID_PATH
  Should Contain  ${output}  Directory does not exists

Remove a non existent directory using the dCache client
  [Tags]  dcache-client  rmdir
  ${dirName}  Get a unique name
  ${output}  Try to remove directory using dCache client  ${dirName}
  Should Contain  ${output}  SRM_INVALID_PATH
  Should Contain  ${output}  Directory does not exists

Remove a non existent file using clientSRM
  [Tags]  storm-client  rm
  ${fileName}  Get a unique name
  ${output}  Try to remove file using clientSRM  ${fileName}
  Should Contain  ${output}  SRM_INVALID_PATH
  Should Contain  ${output}  File does not exist

Remove a non existent file using the dCache client
  [Tags]  dcache-client  rm
  ${fileName}  Get a unique name
  ${output}  Try to remove file using dCache client  ${fileName}
  Should Contain  ${output}  SRM_INVALID_PATH
  Should Contain  ${output}  File does not exist

List files in an existing directory
  [Tags]  storm-client  lcg-utils  ls
  ${dirName}  Get a unique name
  Create directory using clientSRM  ${dirName}
  ${fileName}  Get a unique name
  Put without really putting  ${dirName}  ${fileName}
  ${output}  List files in directory using lcg_utils  ${dirName}
  Should Contain  ${output}  ${fileName}
  ${output}  List files in directory using clientSRM  ${dirName}
  Should Contain  ${output}  ${fileName}
  [Teardown]  Remove directory using clientSRM  ${dirName}

Check if a clientSRM ls on an existent surl works
  [Tags]  storm-client  ls
  ${filename}  Get a unique name
  Put without really putting  /  ${filename}
  ${output}  Execute clientSRM Command on Surl  ls  srm://${srmEndpoint}/${root}/${filename} -c 1
  Should Contain  ${output}  SRM_SUCCESS
  [Teardown]  Remove file using clientSRM  ${filename}

Check if a clientSRM ls on a non-existent file fails
  [Tags]  storm-client  ls
  ${test_file}  Get a unique name
  ${output}  Execute clientSRM Command on Surl  ls  srm://${srmEndpoint}/${root}/${test_file} -c 1
  Should Contain  ${output}  SRM_FAILURE

Check if a lcg-ls on an existent surl works
  [Tags]  lcg-utils  ls
  ${filename}  Get a unique name
  Put without really putting  /  ${filename}
  Check file exists using lcg-utils  ${filename}
  [Teardown]  Remove file using clientSRM  ${filename}

Check if a lcg-ls on a non-existent surl fails
  [Tags]  lcg-utils  ls
  ${test_file}  Get a unique name
  Check file does not exists using lcg-utils  ${test_file}

Remove an existent file using dCache client
  [Tags]  dcache-client  rm
  ${test_file}  Create local file
  Check file does not exists using lcg-utils  ${test_file}
  Copy-out file using lcg-utils  ${test_file}  ${test_file}
  Check file exists using lcg-utils  ${test_file}
  Remove file using dCache client  ${test_file}

Check a clientSRM ls on a non-existent dir fails
  [Tags]  storm-client  ls
  ${dirName}  Get a unique name
  ${output}  Execute clientSRM Command on Surl  ls  srm://${srmEndpoint}/${root}/${dirName} -c 1
  Should Contain  ${output}  SRM_FAILURE

Check if a clientSRM rm on an existent file works
  [Tags]  storm-client  rm
  ${test_file}  Get a unique name
  ${dirName}  Get a unique name
  ${output}  List files in directory using clientSRM  ${dirName}
  Should Contain  ${output}  SRM_FAILURE
  Create directory using clientSRM  ${dirName}
  Prepare to put  ${dirName}  ${test_file}
  ${output}  List files in directory using clientSRM  ${dirName}
  Should Contain  ${output}  SRM_SUCCESS
  ${output}  Execute clientSRM Command on Surl  rm  srm://${srmEndpoint}/${root}/${dirName}/${test_file}
  Should Contain  ${output}  SRM_SUCCESS
  Remove directory using clientSRM  ${dirName}
