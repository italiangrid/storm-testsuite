*** Settings ***
Resource   lib/stormlib.txt
Resource   lib/lcg_util.txt
Resource   lib/clientSRM.txt
Resource   lib/credentials.txt

*** Test Cases ***

List files in an existing directory with lcg-utils
  [Tags]  lcg-utils  ls
  [Setup]  Init certificate and voms proxy  test0  ${VOMSAUTH_SA_VONAME}
  ${dirName}  Get a unique name
  ${surl}  Build surl  ${VOMSAUTH_SA}  ${dirName}
  ${output}  Create directory using clientSRM  ${VOMSAUTH_SA}  ${dirName}
  Should Contain  ${output}  SRM_SUCCESS
  ${fileName}  Get a unique name
  Put without really putting using clientSRM  ${VOMSAUTH_SA}  ${dirName}/${fileName}
  ${output}  List files in directory using lcg_utils  ${VOMSAUTH_SA}  ${dirName}
  Should Contain  ${output}  ${fileName}
  Remove not empty directory using clientSRM  ${VOMSAUTH_SA}  ${dirName}
  Remove local file  ${fileName}
  Remove local directory  ${dirName}
  [Teardown]  Clear all credentials

Check if a lcg-ls on an existent surl works
  [Tags]  lcg-utils  ls
  [Setup]  Init certificate and voms proxy  test0  ${VOMSAUTH_SA_VONAME}
  ${filename}  Get a unique name
  Put without really putting using clientSRM  ${VOMSAUTH_SA}  ${filename}
  ${surl}  Build surl  ${VOMSAUTH_SA}  ${filename}
  Check file exists using lcg-utils  ${surl}
  Remove file using clientSRM  ${VOMSAUTH_SA}  ${filename}
  Remove local file  ${fileName}
  [Teardown]  Clear all credentials

Check if a lcg-ls on a non-existent surl fails
  [Tags]  lcg-utils  ls
  [Setup]  Init certificate and voms proxy  test0  ${VOMSAUTH_SA_VONAME}
  ${filename}  Get a unique name
  ${surl}  Build surl  ${VOMSAUTH_SA}  ${filename}
  Check file does not exists using lcg-utils  ${surl}
  Remove local file  ${fileName}
  [Teardown]  Clear all credentials

Check approached VFS with nested accesspoints
  [Tags]  ls  lcg-utils
  [Setup]  Init certificate and voms proxy  test0  ${VOMSAUTH_SA_VONAME}
  ${dirName}  Get a unique name
  ${surlDir}  Build surl  ${NESTED_SA}  ${dirName}
  ${output}  Perform mkdir using clientSRM  ${surlDir}
  Should Contain  ${output}  SRM_SUCCESS
  ${filename}  Create local file
  ${surlFile}  Build surl  ${NESTED_SA}  ${dirName}/${filename}
  Copy-out file using lcg-utils  ${filename}  ${surlFile}
  ${output}  Perform ls using clientSRM  ${surlDir}
  Should Contain  ${output}  SRM_SUCCESS
  Should Contain  ${output}  ${NESTED_SA}/${dirName}
  Should Contain  ${output}  ${NESTED_SA}/${dirName}/${filename}
  [Teardown]  Clear all credentials
