*** Settings ***
Resource   lib/stormlib.txt
Resource   lib/dcache.txt
Resource   lib/lcg_util.txt
Resource   lib/clientSRM.txt
Resource   lib/credentials.txt

*** Test Cases ***

List files in storage area root
  [Tags]  storm-client  ls
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${surl}  Build surl  ${root}  ${EMPTY}
  Perform ls using clientSRM  ${surl}  -c 1
  [Teardown]  Clear all credentials

Create and remove a directory using clientSRM
  [Tags]  storm-client  rmdir
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${dirName}  Get a unique name
  Create directory using clientSRM  ${root}  ${dirName}
  Remove empty directory using clientSRM  ${root}  ${dirName}
  [Teardown]  Clear all credentials

Create and remove a directory using the dCache client
  [Tags]  dcache-client  rmdir
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${dirName}  Get a unique name
  Create directory using dCache client  ${root}  ${dirName}
  ${output}  Remove empty directory using clientSRM  ${root}  ${dirName}
  Should Contain  ${output}  SRM_SUCCESS
  [Teardown]  Clear all credentials

Create a directory that already exists using clientSRM
  [Tags]  storm-client  mkdir
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${dirName}  Get a unique name
  ${output}  Create directory using clientSRM  ${root}  ${dirName}
  Should Contain  ${output}  SRM_SUCCESS
  ${output}  Create directory using clientSRM  ${root}  ${dirName}
  Should Contain  ${output}  SRM_DUPLICATION_ERROR
  Should Contain  ${output}  Directory specified exists!
  Remove empty directory using clientSRM  ${root}  ${dirName}
  [Teardown]  Clear all credentials

Create a directory that already exists using the dCache client
  [Tags]  dcache-client  mkdir
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${dirName}  Get a unique name
  ${output}  Create directory using clientSRM  ${root}  ${dirName}
  Should Contain  ${output}  SRM_SUCCESS
  ${output}  Try to create directory using dCache client  ${root}  ${dirName}
  Should Contain  ${output}  SRM_DUPLICATION_ERROR
  Should Contain  ${output}  Directory specified exists!
  Remove empty directory using clientSRM  ${root}  ${dirName}
  [Teardown]  Clear all credentials

Remove a non existent directory using clientSRM
  [Tags]  storm-client  rmdir
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${dirName}  Get a unique name
  ${output}  Remove empty directory using clientSRM  ${root}  ${dirName}
  Should Contain  ${output}  SRM_INVALID_PATH
  Should Contain  ${output}  Directory does not exists
  [Teardown]  Clear all credentials

Remove a non existent directory using the dCache client
  [Tags]  dcache-client  rmdir
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${dirName}  Get a unique name
  ${output}  Try to remove directory using dCache client  ${root}  ${dirName}
  Should Contain  ${output}  SRM_INVALID_PATH
  Should Contain  ${output}  Directory does not exists
  [Teardown]  Clear all credentials

Remove a non existent file using clientSRM
  [Tags]  storm-client  rm
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${fileName}  Get a unique name
  ${output}  Remove file using clientSRM  ${root}  ${fileName}
  Should Contain  ${output}  SRM_INVALID_PATH
  Should Contain  ${output}  File does not exist
  [Teardown]  Clear all credentials

Remove a non existent file using the dCache client
  [Tags]  dcache-client  rm
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${fileName}  Get a unique name
  ${output}  Try to remove file using dCache client  ${root}  ${fileName}
  Should Contain  ${output}  SRM_INVALID_PATH
  Should Contain  ${output}  File does not exist
  [Teardown]  Clear all credentials

List files in an existing directory
  [Tags]  storm-client  lcg-utils  ls
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${dirName}  Get a unique name
  ${surl}  Build surl  ${root}  ${dirName}
  ${output}  Create directory using clientSRM  ${root}  ${dirName}
  Should Contain  ${output}  SRM_SUCCESS
  ${fileName}  Get a unique name
  Put without really putting using clientSRM  ${root}  ${dirName}/${fileName}
  ${output}  List files in directory using lcg_utils  ${root}  ${dirName}
  Should Contain  ${output}  ${fileName}
  ${output}  List files in directory using clientSRM  ${root}  ${dirName}
  Should Contain  ${output}  ${fileName}
  Remove not empty directory using clientSRM  ${root}  ${dirName}
  [Teardown]  Clear all credentials

Check if a clientSRM ls on an existent surl works
  [Tags]  storm-client  ls
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${filename}  Get a unique name
  Put without really putting using clientSRM  ${root}  ${filename}
  ${surl}  Build surl  ${root}  ${filename}
  ${output}  Perform ls using clientSRM  ${surl}  -c 1
  Should Contain  ${output}  SRM_SUCCESS
  Perform rm using clientSRM  ${surl}
  [Teardown]  Clear all credentials

Check if a clientSRM ls on a non-existent file fails
  [Tags]  storm-client  ls
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${filename}  Get a unique name
  ${surl}  Build surl  ${root}  ${filename}
  ${output}  Perform ls using clientSRM  ${surl}  -c 1
  Should Contain  ${output}  SRM_FAILURE
  [Teardown]  Clear all credentials

Check if a lcg-ls on an existent surl works
  [Tags]  lcg-utils  ls
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${filename}  Get a unique name
  Put without really putting using clientSRM  ${root}  ${filename}
  ${surl}  Build surl  ${root}  ${filename}
  Check file exists using lcg-utils  ${surl}
  Remove file using clientSRM  ${root}  ${filename}
  [Teardown]  Clear all credentials

Check if a lcg-ls on a non-existent surl fails
  [Tags]  lcg-utils  ls
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${filename}  Get a unique name
  ${surl}  Build surl  ${root}  ${filename}
  Check file does not exists using lcg-utils  ${surl}
  [Teardown]  Clear all credentials

Remove an existent file using dCache client
  [Tags]  dcache-client  rm
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${filename}  Create local file
  ${surl}  Build surl  ${root}  ${filename}
  Check file does not exists using lcg-utils  ${surl}
  Copy-out file using lcg-utils  ${filename}  ${surl}
  Check file exists using lcg-utils  ${surl}
  Remove file using dCache client  ${root}  ${filename}
  [Teardown]  Clear all credentials

Check a clientSRM ls on a non-existent dir fails
  [Tags]  storm-client  ls
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${dirName}  Get a unique name
  ${output}  List files in directory using clientSRM  ${root}  ${dirName}
  Should Contain  ${output}  SRM_FAILURE
  [Teardown]  Clear all credentials

Check if a clientSRM rm on an existent file works
  [Tags]  storm-client  rm
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${filename}  Get a unique name
  ${dirName}  Get a unique name
  ${output}  List files in directory using clientSRM  ${root}  ${dirName}
  Should Contain  ${output}  SRM_FAILURE
  ${output}  Create directory using clientSRM  ${root}  ${dirName}
  Should Contain  ${output}  SRM_SUCCESS
  ${surl}  Build surl  ${root}  ${dirName}/${filename}
  ${output}  ${token}  Perform ptp using clientSRM  ${surl}  -p
  Should Contain  ${output}  SRM_SPACE_AVAILABLE
  ${output}  List files in directory using clientSRM  ${root}  ${dirName}
  Should Contain  ${output}  SRM_SUCCESS
  ${output}  Perform rm using clientSRM  ${surl}
  Should Contain  ${output}  SRM_SUCCESS
  Remove not empty directory using clientSRM  ${root}  ${dirName}
  [Teardown]  Clear all credentials