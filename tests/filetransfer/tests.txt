*** Settings ***
Resource   lib/stormlib.txt
Resource   lib/clientSRM.txt
Resource   lib/credentials.txt
Resource   lib/lcg_util.txt

*** Test Cases ***

File-Transfer upload file as anonymous
  [Tags]  filetransfer  put
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${filename}  Get a unique name
  ${surl}  Build surl  ${anonymousRWStorageArea}  ${filename}
  ${output}  ${token}  Perform ptp using clientSRM  ${surl}  -p
  Should contain  ${output}  SRM_SPACE_AVAILABLE
  ${options}  Set variable  --verbose -X PUT
  ${turl}  Build file transfer TURL  ${anonymousRWStorageArea}  ${filename}
  ${output}  Execute Curl with options  ${turl}  ${options}
  Should Contain  ${output}  204 No Content
  ${output}  Perform pd using clientSRM  ${surl}  ${token}  -p
  Should contain  ${output}  SRM_SUCCESS
  ${output}  Perform rm using clientSRM  ${surl}
  Should contain  ${output}  SRM_SUCCESS
  Remove local file  ${filename}
  [Teardown]  Clear all credentials

File-Transfer upload file with voms proxy
  [Tags]  filetransfer  put
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${filename}  Get a unique name
  ${surl}  Build surl  ${vomsproxyRWStorageArea}  ${filename}
  ${output}  ${token}  Perform ptp using clientSRM  ${surl}  -p
  Should contain  ${output}  SRM_SPACE_AVAILABLE
  ${options}  Set variable  --verbose -X PUT
  ${turl}  Build file transfer secure TURL  ${vomsproxyRWStorageArea}  ${filename}
  ${output}  Execute Curl with proxy and options  ${turl}  ${options}
  Should Contain  ${output}  204 No Content
  ${output}  Perform pd using clientSRM  ${surl}  ${token}  -p
  Should contain  ${output}  SRM_SUCCESS
  ${output}  Perform rm using clientSRM  ${surl}
  Should contain  ${output}  SRM_SUCCESS
  [Teardown]  Clear all credentials

File-Transfer upload file with plain proxy
  [Tags]  filetransfer  put
  [Setup]  Init certificate and plain proxy  test0
  ${filename}  Get a unique name
  ${surl}  Build surl  ${gridproxyRWStorageArea}  ${filename}
  ${output}  ${token}  Perform ptp using clientSRM  ${surl}  -p
  Should contain  ${output}  SRM_SPACE_AVAILABLE
  ${options}  Set variable  --verbose -X PUT
  ${turl}  Build file transfer secure TURL  ${gridproxyRWStorageArea}  ${filename}
  ${output}  Execute Curl with proxy and options  ${turl}  ${options}
  Should Contain  ${output}  204 No Content
  ${output}  Perform pd using clientSRM  ${surl}  ${token}  -p
  Should contain  ${output}  SRM_SUCCESS
  ${output}  Perform rm using clientSRM  ${surl}
  Should contain  ${output}  SRM_SUCCESS
  Remove local file  ${filename}
  [Teardown]  Clear all credentials

File-Transfer upload file with personal certificate
  [Tags]  filetransfer  put
  [Setup]  Init certificate with unencrypted key  test0
  ${filename}  Get a unique name
  ${surl}  Build surl  ${personalcertRWStorageArea}  ${filename}
  ${output}  ${token}  Perform ptp using clientSRM  ${surl}  -p
  Should contain  ${output}  SRM_SPACE_AVAILABLE
  ${options}  Set variable  --verbose -X PUT
  ${turl}  Build file transfer secure TURL  ${personalcertRWStorageArea}  ${filename}
  ${output}  Execute Curl with certificate and options  ${turl}  ${options}
  Should Contain  ${output}  204 No Content
  ${output}  Perform pd using clientSRM  ${surl}  ${token}  -p
  Should contain  ${output}  SRM_SUCCESS
  ${output}  Perform rm using clientSRM  ${surl}
  Should contain  ${output}  SRM_SUCCESS
  Remove local file  ${filename}
  [Teardown]  Clear all credentials

File-Transfer get file as anonymous
  [Tags]  filetransfer  get
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${filename}  Create local file
  ${surl}  Build surl  ${anonymousRWStorageArea}  ${filename}
  Copy-out file using lcg-utils  ${filename}  ${surl}
  ${output}  ${token}  Perform ptg using clientSRM  ${surl}  -p
  Should contain  ${output}  SRM_FILE_PINNED
  ${options}  Set variable  --verbose -X GET
  ${turl}  Build file transfer TURL  ${anonymousRWStorageArea}  ${filename}
  ${output}  Execute Curl with options  ${turl}  ${options}
  Should Contain  ${output}  200 OK
  ${output}  Perform rf using clientSRM  ${surl}  ${token}  -p
  Should contain  ${output}  SRM_SUCCESS
  ${output}  Perform rm using clientSRM  ${surl}
  Should contain  ${output}  SRM_SUCCESS
  Remove local file  ${filename}
  [Teardown]  Clear all credentials

File-Transfer get file with voms proxy
  [Tags]  filetransfer  get
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${filename}  Create local file
  ${surl}  Build surl  ${vomsproxyRWStorageArea}  ${filename}
  Copy-out file using lcg-utils  ${filename}  ${surl}
  ${output}  ${token}  Perform ptg using clientSRM  ${surl}  -p
  Should contain  ${output}  SRM_FILE_PINNED
  ${options}  Set variable  --verbose -X GET
  ${turl}  Build file transfer secure TURL  ${vomsproxyRWStorageArea}  ${filename}
  ${output}  Execute Curl with proxy and options  ${turl}  ${options}
  Should Contain  ${output}  200 OK
  ${output}  Perform rf using clientSRM  ${surl}  ${token}  -p
  Should contain  ${output}  SRM_SUCCESS
  ${output}  Perform rm using clientSRM  ${surl}
  Should contain  ${output}  SRM_SUCCESS
  Remove local file  ${filename}
  [Teardown]  Clear all credentials

File-Transfer get file with plain proxy
  [Tags]  filetransfer  get
  [Setup]  Init certificate and plain proxy  test0
  ${filename}  Create local file
  ${surl}  Build surl  ${gridproxyRWStorageArea}  ${filename}
  Copy-out file using lcg-utils  ${filename}  ${surl}
  ${output}  ${token}  Perform ptg using clientSRM  ${surl}  -p
  Should contain  ${output}  SRM_FILE_PINNED
  ${options}  Set variable  --verbose -X GET
  ${turl}  Build file transfer secure TURL  ${gridproxyRWStorageArea}  ${filename}
  ${output}  Execute Curl with proxy and options  ${turl}  ${options}
  Should Contain  ${output}  200 OK
  ${output}  Perform rf using clientSRM  ${surl}  ${token}  -p
  Should contain  ${output}  SRM_SUCCESS
  ${output}  Perform rm using clientSRM  ${surl}
  Should contain  ${output}  SRM_SUCCESS
  Remove local file  ${filename}
  [Teardown]  Clear all credentials

File-Transfer get file with personal certificate
  [Tags]  filetransfer  get
  [Setup]  Init certificate with unencrypted key  test0
  ${filename}  Create local file
  ${surl}  Build surl  ${personalcertRWStorageArea}  ${filename}
  Copy-out file using lcg-utils  ${filename}  ${surl}
  ${output}  ${token}  Perform ptg using clientSRM  ${surl}  -p
  Should contain  ${output}  SRM_FILE_PINNED
  ${options}  Set variable  --verbose -X GET
  ${turl}  Build file transfer secure TURL  ${personalcertRWStorageArea}  ${filename}
  ${output}  Execute Curl with certificate and options  ${turl}  ${options}
  Should Contain  ${output}  200 OK
  ${output}  Perform rf using clientSRM  ${surl}  ${token}  -p
  Should contain  ${output}  SRM_SUCCESS
  ${output}  Perform rm using clientSRM  ${surl}
  Should contain  ${output}  SRM_SUCCESS
  Remove local file  ${filename}
  [Teardown]  Clear all credentials

File-Transfer upload file as anonymous without ptp
  [Tags]  filetransfer  put
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${filename}  Get a unique name
  ${options}  Set variable  --verbose -X PUT
  ${turl}  Build file transfer TURL  ${anonymousRWStorageArea}  ${filename}
  ${output}  Execute Curl with options  ${turl}  ${options}
  Should Contain  ${output}  412 File not exist! You must do a prepare-to-put on surl
  Remove local file  ${filename}
  [Teardown]  Clear all credentials

File-Transfer get file as anonymous without ptg
  [Tags]  filetransfer  get
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${filename}  Create local file
  ${surl}  Build surl  ${anonymousRWStorageArea}  ${filename}
  Copy-out file using lcg-utils  ${filename}  ${surl}
  ${options}  Set variable  --verbose -X GET
  ${turl}  Build file transfer TURL  ${anonymousRWStorageArea}  ${filename}
  ${output}  Execute Curl with options  ${turl}  ${options}
  Should Contain  ${output}  412 You must do a prepare-to-get on surl
  ${output}  Perform rm using clientSRM  ${surl}
  Should contain  ${output}  SRM_SUCCESS
  Remove local file  ${filename}
  [Teardown]  Clear all credentials