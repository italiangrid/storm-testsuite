*** Settings ***
Resource   lib/stormlib.txt
Resource   lib/clientSRM.txt
Resource   lib/lcg_util.txt
Resource   lib/credentials.txt

*** Test Cases ***

WebDAV COPY file as anonymous
  [Tags]  webdav  copy
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${srcFileName}  Create local file
  ${srcSurl}  Build surl  ${anonymousRWStorageArea}  ${srcFileName}
  ${destFileName}  Get a unique name
  ${destSurl}  Build surl  ${anonymousRWStorageArea}  ${destFileName}
  Copy-out file using lcg-utils  ${srcFileName}  ${srcSurl}
  ${url}  Set variable  http://${davEndpoint}/${anonymousRWStorageArea}/${srcFileName}
  ${destUrl}  Set variable  http://${davEndpoint}/${anonymousRWStorageArea}/${destFileName}
  ${options}  Set variable  --verbose -X COPY --header 'Destination: ${destUrl}'
  ${output}  Execute Curl with options  ${url}  ${options}
  Should Contain  ${output}  201 Created
  Perform rm using clientSRM  ${srcSurl}
  Perform rm using clientSRM  ${destSurl}
  Remove local file  ${srcFileName}
  Remove local file  ${destFileName}
  [Teardown]  Clear all credentials

WebDAV COPY file with voms proxy credentials
  [Tags]  webdav  copy
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${srcFileName}  Create local file
  ${srcSurl}  Build surl  ${vomsproxyRWStorageArea}  ${srcFileName}
  ${destFileName}  Get a unique name
  ${destSurl}  Build surl  ${vomsproxyRWStorageArea}  ${destFileName}
  Copy-out file using lcg-utils  ${srcFileName}  ${srcSurl}
  ${url}  Set variable  https://${davSecureEndpoint}/${vomsproxyRWStorageArea}/${srcFileName}
  ${destUrl}  Set variable  https://${davSecureEndpoint}/${vomsproxyRWStorageArea}/${destFileName}
  ${options}  Set variable  --verbose -X COPY --header 'Destination: ${destUrl}'
  ${output}  Execute Curl with proxy and options  ${url}  ${options}
  Should Contain  ${output}  201 Created
  Perform rm using clientSRM  ${srcSurl}
  Perform rm using clientSRM  ${destSurl}
  Remove local file  ${srcFileName}
  Remove local file  ${destFileName}
  [Teardown]  Clear all credentials

WebDAV COPY file with plain proxy credentials
  [Tags]  webdav  copy
  [Setup]  Init certificate and plain proxy  test0
  ${srcFileName}  Create local file
  ${srcSurl}  Build surl  ${gridproxyRWStorageArea}  ${srcFileName}
  ${destFileName}  Get a unique name
  ${destSurl}  Build surl  ${gridproxyRWStorageArea}  ${destFileName}
  Copy-out file using lcg-utils  ${srcFileName}  ${srcSurl}
  ${url}  Set variable  https://${davSecureEndpoint}/${gridproxyRWStorageArea}/${srcFileName}
  ${destUrl}  Set variable  https://${davSecureEndpoint}/${gridproxyRWStorageArea}/${destFileName}
  ${options}  Set variable  --verbose -X COPY --header 'Destination: ${destUrl}'
  ${output}  Execute Curl with proxy and options  ${url}  ${options}
  Should Contain  ${output}  201 Created
  Perform rm using clientSRM  ${srcSurl}
  Perform rm using clientSRM  ${destSurl}
  Remove local file  ${srcFileName}
  Remove local file  ${destFileName}
  [Teardown]  Clear all credentials

WebDAV COPY file with personal certificate
  [Tags]  webdav  copy
  [Setup]  Init certificate with unencrypted key  test0
  ${srcFileName}  Create local file
  ${srcSurl}  Build surl  ${personalcertRWStorageArea}  ${srcFileName}
  ${destFileName}  Get a unique name
  ${destSurl}  Build surl  ${personalcertRWStorageArea}  ${destFileName}
  Copy-out file using lcg-utils  ${srcFileName}  ${srcSurl}
  ${url}  Set variable  https://${davSecureEndpoint}/${personalcertRWStorageArea}/${srcFileName}
  ${destUrl}  Set variable  https://${davSecureEndpoint}/${personalcertRWStorageArea}/${destFileName}
  ${options}  Set variable  --verbose -X COPY --header 'Destination: ${destUrl}'
  ${output}  Execute Curl with certificate and options  ${url}  ${options}
  Should Contain  ${output}  201 Created
  Perform rm using clientSRM  ${srcSurl}
  Perform rm using clientSRM  ${destSurl}
  Remove local file  ${srcFileName}
  Remove local file  ${destFileName}
  [Teardown]  Clear all credentials

WebDAV COPY full directory as anonymous
  [Tags]  webdav  copy
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${srcDirName}  Get a unique name
  ${srcDirSurl}  Build surl  ${anonymousRWStorageArea}  ${srcDirName}
  ${output}  Perform mkdir using clientSRM  ${srcDirSurl}
  Should Contain  ${output}  SRM_SUCCESS
  ${fileName}  Create local file
  ${fileSurl}  Build surl  ${anonymousRWStorageArea}  ${srcDirName}/${fileName}
  Copy-out file using lcg-utils  ${fileName}  ${fileSurl}
  ${destDirName}  Get a unique name
  ${url}  Set variable  http://${davEndpoint}/${anonymousRWStorageArea}/${srcDirName}
  ${destUrl}  Set variable  http://${davEndpoint}/${anonymousRWStorageArea}/${destDirName}
  ${options}  Set variable  --verbose -X COPY --header 'Destination: ${destUrl}'
  ${output}  Execute Curl with options  ${url}  ${options}
  Should Contain  ${output}  201 Created
  Remove not empty directory using clientSRM  ${anonymousRWStorageArea}  ${srcDirName}
  Remove not empty directory using clientSRM  ${anonymousRWStorageArea}  ${destDirName}
  Remove local file  ${fileName}
  Remove local directory  ${srcDirName}
  Remove local directory  ${destDirName}
  [Teardown]  Clear all credentials

WebDAV COPY full directory with voms proxy credentials
  [Tags]  webdav  copy
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${srcDirName}  Get a unique name
  ${srcDirSurl}  Build surl  ${vomsproxyRWStorageArea}  ${srcDirName}
  ${output}  Perform mkdir using clientSRM  ${srcDirSurl}
  Should Contain  ${output}  SRM_SUCCESS
  ${fileName}  Create local file
  ${fileSurl}  Build surl  ${vomsproxyRWStorageArea}  ${srcDirName}/${fileName}
  Copy-out file using lcg-utils  ${fileName}  ${fileSurl}
  ${destDirName}  Get a unique name
  ${url}  Set variable  https://${davSecureEndpoint}/${vomsproxyRWStorageArea}/${srcDirName}
  ${destUrl}  Set variable  https://${davSecureEndpoint}/${vomsproxyRWStorageArea}/${destDirName}
  ${options}  Set variable  --verbose -X COPY --header 'Destination: ${destUrl}'
  ${output}  Execute Curl with proxy and options  ${url}  ${options}
  Should Contain  ${output}  201 Created
  Remove not empty directory using clientSRM  ${vomsproxyRWStorageArea}  ${srcDirName}
  Remove not empty directory using clientSRM  ${vomsproxyRWStorageArea}  ${destDirName}
  Remove local file  ${fileName}
  Remove local directory  ${srcDirName}
  Remove local directory  ${destDirName}
  [Teardown]  Clear all credentials

WebDAV COPY full directory with plain proxy credentials
  [Tags]  webdav  copy
  [Setup]  Init certificate and plain proxy  test0
  ${srcDirName}  Get a unique name
  ${srcDirSurl}  Build surl  ${gridproxyRWStorageArea}  ${srcDirName}
  ${output}  Perform mkdir using clientSRM  ${srcDirSurl}
  Should Contain  ${output}  SRM_SUCCESS
  ${fileName}  Create local file
  ${fileSurl}  Build surl  ${gridproxyRWStorageArea}  ${srcDirName}/${fileName}
  Copy-out file using lcg-utils  ${fileName}  ${fileSurl}
  ${destDirName}  Get a unique name
  ${url}  Set variable  https://${davSecureEndpoint}/${gridproxyRWStorageArea}/${srcDirName}
  ${destUrl}  Set variable  https://${davSecureEndpoint}/${gridproxyRWStorageArea}/${destDirName}
  ${options}  Set variable  --verbose -X COPY --header 'Destination: ${destUrl}'
  ${output}  Execute Curl with proxy and options  ${url}  ${options}
  Should Contain  ${output}  201 Created
  Remove not empty directory using clientSRM  ${gridproxyRWStorageArea}  ${srcDirName}
  Remove not empty directory using clientSRM  ${gridproxyRWStorageArea}  ${destDirName}
  Remove local file  ${fileName}
  Remove local directory  ${srcDirName}
  Remove local directory  ${destDirName}
  [Teardown]  Clear all credentials

WebDAV COPY full directory with personal certificate
  [Tags]  webdav  copy
  [Setup]  Init certificate with unencrypted key  test0
  ${srcDirName}  Get a unique name
  ${srcDirSurl}  Build surl  ${personalcertRWStorageArea}  ${srcDirName}
  ${output}  Perform mkdir using clientSRM  ${srcDirSurl}
  Should Contain  ${output}  SRM_SUCCESS
  ${fileName}  Create local file
  ${fileSurl}  Build surl  ${personalcertRWStorageArea}  ${srcDirName}/${fileName}
  Copy-out file using lcg-utils  ${fileName}  ${fileSurl}
  ${destDirName}  Get a unique name
  ${url}  Set variable  https://${davSecureEndpoint}/${personalcertRWStorageArea}/${srcDirName}
  ${destUrl}  Set variable  https://${davSecureEndpoint}/${personalcertRWStorageArea}/${destDirName}
  ${options}  Set variable  --verbose -X COPY --header 'Destination: ${destUrl}'
  ${output}  Execute Curl with certificate and options  ${url}  ${options}
  Should Contain  ${output}  201 Created
  Remove not empty directory using clientSRM  ${personalcertRWStorageArea}  ${srcDirName}
  Remove not empty directory using clientSRM  ${personalcertRWStorageArea}  ${destDirName}
  Remove local file  ${fileName}
  Remove local directory  ${srcDirName}
  Remove local directory  ${destDirName}
  [Teardown]  Clear all credentials

WebDAV COPY overwrite file as anonymous
  [Tags]  webdav  copy
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${srcFileName}  Create local file
  ${srcSurl}  Build surl  ${anonymousRWStorageArea}  ${srcFileName}
  ${destFileName}  Get a unique name
  ${destSurl}  Build surl  ${anonymousRWStorageArea}  ${destFileName}
  Copy-out file using lcg-utils  ${srcFileName}  ${srcSurl}
  ${url}  Set variable  http://${davEndpoint}/${anonymousRWStorageArea}/${srcFileName}
  ${destUrl}  Set variable  http://${davEndpoint}/${anonymousRWStorageArea}/${destFileName}
  ${options}  Set variable  --verbose -X COPY --header 'Destination: ${destUrl}'
  ${output}  Execute Curl with options  ${url}  ${options}
  Should Contain  ${output}  201 Created
  ${options}  Set variable  --verbose -X COPY --header 'Destination: ${destUrl}' --header 'Overwrite: T'
  ${output}  Execute Curl with options  ${url}  ${options}
  Should Contain  ${output}  204 No Content
  Perform rm using clientSRM  ${srcSurl}
  Perform rm using clientSRM  ${destSurl}
  Remove local file  ${srcFileName}
  Remove local file  ${destFileName}
  [Teardown]  Clear all credentials

WebDAV COPY overwrite file with voms proxy credentials
  [Tags]  webdav  copy
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${srcFileName}  Create local file
  ${srcSurl}  Build surl  ${vomsproxyRWStorageArea}  ${srcFileName}
  ${destFileName}  Get a unique name
  ${destSurl}  Build surl  ${vomsproxyRWStorageArea}  ${destFileName}
  Copy-out file using lcg-utils  ${srcFileName}  ${srcSurl}
  ${url}  Set variable  https://${davSecureEndpoint}/${vomsproxyRWStorageArea}/${srcFileName}
  ${destUrl}  Set variable  https://${davSecureEndpoint}/${vomsproxyRWStorageArea}/${destFileName}
  ${options}  Set variable  --verbose -X COPY --header 'Destination: ${destUrl}'
  ${output}  Execute Curl with proxy and options  ${url}  ${options}
  Should Contain  ${output}  201 Created
  ${options}  Set variable  --verbose -X COPY --header 'Destination: ${destUrl}' --header 'Overwrite: T'
  ${output}  Execute Curl with proxy and options  ${url}  ${options}
  Should Contain  ${output}  204 No Content
  Perform rm using clientSRM  ${srcSurl}
  Perform rm using clientSRM  ${destSurl}
  Remove local file  ${srcFileName}
  Remove local file  ${destFileName}
  [Teardown]  Clear all credentials

WebDAV COPY overwrite file with plain proxy credentials
  [Tags]  webdav  copy
  [Setup]  Init certificate and plain proxy  test0
  ${srcFileName}  Create local file
  ${srcSurl}  Build surl  ${gridproxyRWStorageArea}  ${srcFileName}
  ${destFileName}  Get a unique name
  ${destSurl}  Build surl  ${gridproxyRWStorageArea}  ${destFileName}
  Copy-out file using lcg-utils  ${srcFileName}  ${srcSurl}
  ${url}  Set variable  https://${davSecureEndpoint}/${gridproxyRWStorageArea}/${srcFileName}
  ${destUrl}  Set variable  https://${davSecureEndpoint}/${gridproxyRWStorageArea}/${destFileName}
  ${options}  Set variable  --verbose -X COPY --header 'Destination: ${destUrl}'
  ${output}  Execute Curl with proxy and options  ${url}  ${options}
  Should Contain  ${output}  201 Created
  ${options}  Set variable  --verbose -X COPY --header 'Destination: ${destUrl}' --header 'Overwrite: T'
  ${output}  Execute Curl with proxy and options  ${url}  ${options}
  Should Contain  ${output}  204 No Content
  Perform rm using clientSRM  ${srcSurl}
  Perform rm using clientSRM  ${destSurl}
  Remove local file  ${srcFileName}
  Remove local file  ${destFileName}
  [Teardown]  Clear all credentials

WebDAV COPY overwrite file with personal certificate
  [Tags]  webdav  copy
  [Setup]  Init certificate with unencrypted key  test0
  ${srcFileName}  Create local file
  ${srcSurl}  Build surl  ${personalcertRWStorageArea}  ${srcFileName}
  ${destFileName}  Get a unique name
  ${destSurl}  Build surl  ${personalcertRWStorageArea}  ${destFileName}
  Copy-out file using lcg-utils  ${srcFileName}  ${srcSurl}
  ${url}  Set variable  https://${davSecureEndpoint}/${personalcertRWStorageArea}/${srcFileName}
  ${destUrl}  Set variable  https://${davSecureEndpoint}/${personalcertRWStorageArea}/${destFileName}
  ${options}  Set variable  --verbose -X COPY --header 'Destination: ${destUrl}'
  ${output}  Execute Curl with certificate and options  ${url}  ${options}
  Should Contain  ${output}  201 Created
  ${options}  Set variable  --verbose -X COPY --header 'Destination: ${destUrl}' --header 'Overwrite: T'
  ${output}  Execute Curl with certificate and options  ${url}  ${options}
  Should Contain  ${output}  204 No Content
  Perform rm using clientSRM  ${srcSurl}
  Perform rm using clientSRM  ${destSurl}
  Remove local file  ${srcFileName}
  Remove local file  ${destFileName}
  [Teardown]  Clear all credentials

WebDAV COPY overwrite full directory as anonymous
  [Tags]  webdav  copy
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${srcDirName}  Get a unique name
  ${srcDirSurl}  Build surl  ${anonymousRWStorageArea}  ${srcDirName}
  ${output}  Perform mkdir using clientSRM  ${srcDirSurl}
  Should Contain  ${output}  SRM_SUCCESS
  ${fileName}  Create local file
  ${fileSurl}  Build surl  ${anonymousRWStorageArea}  ${srcDirName}/${fileName}
  Copy-out file using lcg-utils  ${fileName}  ${fileSurl}
  ${destDirName}  Get a unique name
  ${url}  Set variable  http://${davEndpoint}/${anonymousRWStorageArea}/${srcDirName}
  ${destUrl}  Set variable  http://${davEndpoint}/${anonymousRWStorageArea}/${destDirName}
  ${options}  Set variable  --verbose -X COPY --header 'Destination: ${destUrl}'
  ${output}  Execute Curl with options  ${url}  ${options}
  Should Contain  ${output}  201 Created
  ${options}  Set variable  --verbose -X COPY --header 'Destination: ${destUrl}' --header 'Overwrite: T'
  ${output}  Execute Curl with options  ${url}  ${options}
  Should Contain  ${output}  204 No Content
  Remove not empty directory using clientSRM  ${anonymousRWStorageArea}  ${srcDirName}
  Remove not empty directory using clientSRM  ${anonymousRWStorageArea}  ${destDirName}
  Remove local file  ${fileName}
  Remove local directory  ${srcDirName}
  Remove local directory  ${destDirName}
  [Teardown]  Clear all credentials

WebDAV COPY overwrite full directory with voms proxy credentials
  [Tags]  webdav  copy
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${srcDirName}  Get a unique name
  ${srcDirSurl}  Build surl  ${vomsproxyRWStorageArea}  ${srcDirName}
  ${output}  Perform mkdir using clientSRM  ${srcDirSurl}
  Should Contain  ${output}  SRM_SUCCESS
  ${fileName}  Create local file
  ${fileSurl}  Build surl  ${vomsproxyRWStorageArea}  ${srcDirName}/${fileName}
  Copy-out file using lcg-utils  ${fileName}  ${fileSurl}
  ${destDirName}  Get a unique name
  ${url}  Set variable  https://${davSecureEndpoint}/${vomsproxyRWStorageArea}/${srcDirName}
  ${destUrl}  Set variable  https://${davSecureEndpoint}/${vomsproxyRWStorageArea}/${destDirName}
  ${options}  Set variable  --verbose -X COPY --header 'Destination: ${destUrl}'
  ${output}  Execute Curl with proxy and options  ${url}  ${options}
  Should Contain  ${output}  201 Created
  ${options}  Set variable  --verbose -X COPY --header 'Destination: ${destUrl}' --header 'Overwrite: T'
  ${output}  Execute Curl with proxy and options  ${url}  ${options}
  Should Contain  ${output}  204 No Content
  Remove not empty directory using clientSRM  ${vomsproxyRWStorageArea}  ${srcDirName}
  Remove not empty directory using clientSRM  ${vomsproxyRWStorageArea}  ${destDirName}
  Remove local file  ${fileName}
  Remove local directory  ${srcDirName}
  Remove local directory  ${destDirName}
  [Teardown]  Clear all credentials

WebDAV COPY overwrite full directory with plain proxy credentials
  [Tags]  webdav  copy
  [Setup]  Init certificate and plain proxy  test0
  ${srcDirName}  Get a unique name
  ${srcDirSurl}  Build surl  ${gridproxyRWStorageArea}  ${srcDirName}
  ${output}  Perform mkdir using clientSRM  ${srcDirSurl}
  Should Contain  ${output}  SRM_SUCCESS
  ${fileName}  Create local file
  ${fileSurl}  Build surl  ${gridproxyRWStorageArea}  ${srcDirName}/${fileName}
  Copy-out file using lcg-utils  ${fileName}  ${fileSurl}
  ${destDirName}  Get a unique name
  ${url}  Set variable  https://${davSecureEndpoint}/${gridproxyRWStorageArea}/${srcDirName}
  ${destUrl}  Set variable  https://${davSecureEndpoint}/${gridproxyRWStorageArea}/${destDirName}
  ${options}  Set variable  --verbose -X COPY --header 'Destination: ${destUrl}'
  ${output}  Execute Curl with proxy and options  ${url}  ${options}
  Should Contain  ${output}  201 Created
  ${options}  Set variable  --verbose -X COPY --header 'Destination: ${destUrl}' --header 'Overwrite: T'
  ${output}  Execute Curl with proxy and options  ${url}  ${options}
  Should Contain  ${output}  204 No Content
  Remove not empty directory using clientSRM  ${gridproxyRWStorageArea}  ${srcDirName}
  Remove not empty directory using clientSRM  ${gridproxyRWStorageArea}  ${destDirName}
  Remove local file  ${fileName}
  Remove local directory  ${srcDirName}
  Remove local directory  ${destDirName}
  [Teardown]  Clear all credentials

WEBDAV COPY overwrite full directory over HTTPS with a personal certificate
  [Tags]  webdav  copy
  [Setup]  Init certificate with unencrypted key  test0
  ${srcDirName}  Get a unique name
  ${srcDirSurl}  Build surl  ${personalcertRWStorageArea}  ${srcDirName}
  ${output}  Perform mkdir using clientSRM  ${srcDirSurl}
  Should Contain  ${output}  SRM_SUCCESS
  ${fileName}  Create local file
  ${fileSurl}  Build surl  ${personalcertRWStorageArea}  ${srcDirName}/${fileName}
  Copy-out file using lcg-utils  ${fileName}  ${fileSurl}
  ${destDirName}  Get a unique name
  ${url}  Set variable  https://${davSecureEndpoint}/${personalcertRWStorageArea}/${srcDirName}
  ${destUrl}  Set variable  https://${davSecureEndpoint}/${personalcertRWStorageArea}/${destDirName}
  ${options}  Set variable  --verbose -X COPY --header 'Destination: ${destUrl}'
  ${output}  Execute Curl with certificate and options  ${url}  ${options}
  Should Contain  ${output}  201 Created
  ${options}  Set variable  --verbose -X COPY --header 'Destination: ${destUrl}' --header 'Overwrite: T'
  ${output}  Execute Curl with certificate and options  ${url}  ${options}
  Should Contain  ${output}  204 No Content
  Remove not empty directory using clientSRM  ${personalcertRWStorageArea}  ${srcDirName}
  Remove not empty directory using clientSRM  ${personalcertRWStorageArea}  ${destDirName}
  Remove local file  ${fileName}
  Remove local directory  ${srcDirName}
  Remove local directory  ${destDirName}
  [Teardown]  Clear all credentials

WEBDAV COPY to a different storage area over HTTP
  [Tags]  webdav  copy
  [Setup]  Init certificate with unencrypted key  test0
  ${srcFileName}  Create local file
  ${srcSurl}  Build surl  ${anonymousBisRWStorageArea}  ${srcFileName}
  ${destFileName}  Get a unique name
  ${destSurl}  Build surl  ${anonymousRWStorageArea}  ${destFileName}
  Copy-out file using lcg-utils  ${srcFileName}  ${srcSurl}
  ${url}  Set variable  http://${davEndpoint}/${anonymousBisRWStorageArea}/${srcFileName}
  ${destUrl}  Set variable  http://${davEndpoint}/${anonymousRWStorageArea}/${destFileName}
  ${options}  Set variable  --verbose -X COPY --header 'Destination: ${destUrl}' 
  ${output}  Execute Curl with options  ${url}  ${options}
  Should Contain  ${output}  201 Created
  Perform rm using clientSRM  ${srcSurl}
  Perform rm using clientSRM  ${destSurl}
  Remove local file  ${srcFileName}
  Remove local file  ${destFileName}
  [Teardown]  Clear all credentials

WEBDAV COPY to a different storage area over HTTPS with personal certificate
  [Tags]  webdav  copy
  [Setup]  Init certificate with unencrypted key  test0
  ${srcFileName}  Create local file
  ${srcSurl}  Build surl  ${personalcertRWStorageArea}  ${srcFileName}
  ${destFileName}  Get a unique name
  ${destSurl}  Build surl  ${personalcertBisRWStorageArea}  ${destFileName}
  Copy-out file using lcg-utils  ${srcFileName}  ${srcSurl}
  ${url}  Set variable  https://${davSecureEndpoint}/${personalcertRWStorageArea}/${srcFileName}
  ${destUrl}  Set variable  https://${davSecureEndpoint}/${personalcertBisRWStorageArea}/${destFileName}
  ${options}  Set variable  --verbose -X COPY --header 'Destination: ${destUrl}'
  ${output}  Execute Curl with certificate and options  ${url}  ${options}
  Should Contain  ${output}  201 Created
  Perform rm using clientSRM  ${srcSurl}
  Perform rm using clientSRM  ${destSurl}
  Remove local file  ${srcFileName}
  Remove local file  ${destFileName}
  [Teardown]  Clear all credentials

WebDAV COPY with source URL equals to destination URL as anonymous
  [Tags]  webdav  copy
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${srcFileName}  Create local file
  ${srcSurl}  Build surl  ${anonymousRWStorageArea}  ${srcFileName}
  Copy-out file using lcg-utils  ${srcFileName}  ${srcSurl}
  ${url}  Set variable  http://${davEndpoint}/${anonymousRWStorageArea}/${srcFileName}
  ${options}  Set variable  --verbose -X COPY --header 'Destination: ${url}'
  ${output}  Execute Curl with options  ${url}  ${options}
  Should Contain  ${output}  403 The source and destination URIs are the same!
  Perform rm using clientSRM  ${srcSurl}
  Remove local file  ${srcFileName}
  [Teardown]  Clear all credentials

WebDAV COPY file with overwrite false on existent destination as anonymous
  [Tags]  webdav  copy
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${srcFileName}  Create local file
  ${srcSurl}  Build surl  ${anonymousRWStorageArea}  ${srcFileName}
  ${destFileName}  Get a unique name
  ${destSurl}  Build surl  ${anonymousRWStorageArea}  ${destFileName}
  Copy-out file using lcg-utils  ${srcFileName}  ${srcSurl}
  ${url}  Set variable  http://${davEndpoint}/${anonymousRWStorageArea}/${srcFileName}
  ${destUrl}  Set variable  http://${davEndpoint}/${anonymousRWStorageArea}/${destFileName}
  ${options}  Set variable  --verbose -X COPY --header 'Destination: ${destUrl}'
  ${output}  Execute Curl with options  ${url}  ${options}
  Should Contain  ${output}  201 Created
  ${options}  Set variable  --verbose -X COPY --header 'Destination: ${destUrl}' --header 'Overwrite: F'
  ${output}  Execute Curl with options  ${url}  ${options}
  Should Contain  ${output}  412 Precondition Failed
  Perform rm using clientSRM  ${srcSurl}
  Perform rm using clientSRM  ${destSurl}
  Remove local file  ${srcFileName}
  Remove local file  ${destFileName}
  [Teardown]  Clear all credentials

WebDAV COPY file to a destination with unexistent intermediate parent as anonymous
  [Tags]  webdav  copy
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${srcFileName}  Create local file
  ${srcSurl}  Build surl  ${anonymousRWStorageArea}  ${srcFileName}
  ${destFileName}  Get a unique name
  ${destDirName}  Get a unique name
  ${destDirSurl}  Build surl  ${anonymousRWStorageArea}  ${destDirName}
  ${output}  Perform ls using clientSRM  ${destDirSurl}  -c 1
  Should Contain  ${output}  SRM_INVALID_PATH
  ${destSurl}  Build surl  ${anonymousRWStorageArea}  ${destDirName}/${destFileName}
  Copy-out file using lcg-utils  ${srcFileName}  ${srcSurl}
  ${url}  Set variable  http://${davEndpoint}/${anonymousRWStorageArea}/${srcFileName}
  ${destUrl}  Set variable  http://${davEndpoint}/${anonymousRWStorageArea}/${destDirName}/${destFileName}
  ${options}  Set variable  --verbose -X COPY --header 'Destination: ${destUrl}'
  ${output}  Execute Curl with options  ${url}  ${options}
  Should Contain  ${output}  409 Conflict
  Perform rm using clientSRM  ${srcSurl}
  Remove local file  ${srcFileName}
  Remove local file  ${destFileName}
  Remove local directory  ${destDirName}
  [Teardown]  Clear all credentials