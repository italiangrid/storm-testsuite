*** Settings ***

Resource   lib/webdav.txt
Resource   lib/clientSRM.txt
Resource   lib/credentials.txt

Resource   lib/setup.txt

Suite Setup       Setup suite if needed
Suite Teardown    Teardown suite if needed

*** Test Cases ***

######## GET #########

WebDAV GET existent VOMS proxy storage area file as anonymous
  [Tags]  webdav  forbidden  get  anonymous  vomsproxy
  Use certificate and proxy  test0  ${VOMSAUTH_SA_PROXY}
  ${vomsproxy}  Get VOMS proxy options for Curl
  ${filename}  Upload file  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${vomsproxy}
  ${output}  WebDAV GET  ${davEndpoint}  ${VOMSAUTH_SA}  ${TESTDIR}/${filename}
  Log  ${output}
  Should Contain  ${output}  403
  [Teardown]  Clear all credentials

WebDAV GET existent VOMS proxy storage area file with plain proxy
  [Tags]  webdav  forbidden  get  vomsproxy  plainproxy
  Use certificate and proxy  test0  ${VOMSAUTH_SA_PROXY}
  ${vomsproxy}  Get VOMS proxy options for Curl
  ${filename}  Upload file  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${vomsproxy}
  Use certificate and proxy  test0  ${X509AUTH_SA_PROXY}
  ${plainproxy}  Get x509 options for Curl
  ${output}  WebDAV GET  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${TESTDIR}/${filename}  ${plainproxy}
  Log  ${output}
  Should Contain  ${output}  403
  [Teardown]  Clear all credentials

WebDAV GET existent plain proxy storage area file as anonymous
  [Tags]  webdav  forbidden  get  anonymous  plainproxy
  Use certificate and proxy  test0  ${X509AUTH_SA_PROXY}
  ${plainproxy}  Get x509 options for Curl
  ${filename}  Upload file  ${davSecureEndpoint}  ${X509AUTH_SA}  ${plainproxy}
  ${output}  WebDAV GET  ${davEndpoint}  ${X509AUTH_SA}  ${TESTDIR}/${filename}
  Log  ${output}
  Should Contain  ${output}  403
  [Teardown]  Clear all credentials

WebDAV GET existent VOMS proxy storage area directory as anonymous
  [Tags]  webdav  forbidden  get  anonymous
  [Setup]  Clear all credentials
  ${output}  WebDAV GET  ${davEndpoint}  ${VOMSAUTH_SA}  ${TESTDIR}
  Log  ${output}
  Should Contain  ${output}  403

WebDAV GET existent VOMS proxy storage area directory with plain proxy
  [Tags]  webdav  forbidden  get  vomsproxy  plainproxy
  Use certificate and proxy  test0  ${X509AUTH_SA_PROXY}
  ${plainproxy}  Get x509 options for Curl
  ${output}  WebDAV GET  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${TESTDIR}  ${plainproxy}
  Log  ${output}
  Should Contain  ${output}  403
  [Teardown]  Clear all credentials

WebDAV GET existent plain proxy storage area directory as anonymous
  [Tags]  webdav  forbidden  get  anonymous
  [Setup]  Clear all credentials
  ${output}  WebDAV GET  ${davEndpoint}  ${X509AUTH_SA}  ${TESTDIR}
  Log  ${output}
  Should Contain  ${output}  403

######## HEAD #########

WebDAV HEAD existent VOMS proxy storage area file as anonymous
  [Tags]  webdav  forbidden  head  vomsproxy  anonymous
  Use certificate and proxy  test0  ${VOMSAUTH_SA_PROXY}
  ${vomsproxy}  Get VOMS proxy options for Curl
  ${filename}  Upload file  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${vomsproxy}
  ${output}  WebDAV HEAD  ${davEndpoint}  ${VOMSAUTH_SA}  ${TESTDIR}/${filename}
  Log  ${output}
  Should Contain  ${output}  403
  [Teardown]  Clear all credentials

WebDAV HEAD existent VOMS proxy storage area file with plain proxy
  [Documentation]  It retrieves 200 OK instead of 403
  [Tags]  webdav  forbidden  head  vomsproxy  plainproxy  to-be-fixed
  Use certificate and proxy  test0  ${VOMSAUTH_SA_PROXY}
  ${vomsproxy}  Get VOMS proxy options for Curl
  ${filename}  Upload file  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${vomsproxy}
  Use certificate and proxy  test0  ${X509AUTH_SA_PROXY}
  ${plainproxy}  Get x509 options for Curl
  ${output}  WebDAV HEAD  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${TESTDIR}/${filename}  ${plainproxy}
  Log  ${output}
  Should Contain  ${output}  403
  [Teardown]  Clear all credentials

WebDAV HEAD existent plain proxy storage area file as anonymous
  [Tags]  webdav  forbidden  head  plainproxy
  Use certificate and proxy  test0  ${X509AUTH_SA_PROXY}
  ${plainproxy}  Get x509 options for Curl
  ${filename}  Upload file  ${davSecureEndpoint}  ${X509AUTH_SA}  ${plainproxy}
  ${output}  WebDAV HEAD  ${davEndpoint}  ${X509AUTH_SA}  ${TESTDIR}/${filename}
  Log  ${output}
  Should Contain  ${output}  403
  [Teardown]  Clear all credentials

WebDAV HEAD existent VOMS proxy storage area directory as anonymous
  [Tags]  webdav  forbidden  head  anonymous
  [Setup]  Clear all credentials
  ${output}  WebDAV HEAD  ${davEndpoint}  ${VOMSAUTH_SA}  ${TESTDIR}
  Log  ${output}
  Should Contain  ${output}  403

WebDAV HEAD existent VOMS proxy storage area directory with plain proxy
  [Documentation]  It retrieves 500 instead of 403
  [Tags]  webdav  forbidden  head  plainproxy  to-be-fixed
  Use certificate and proxy  test0  ${X509AUTH_SA_PROXY}
  ${plainproxy}  Get x509 options for Curl
  ${output}  WebDAV HEAD  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${TESTDIR}  ${plainproxy}
  Log  ${output}
  Should Contain  ${output}  403
  [Teardown]  Clear all credentials

WebDAV HEAD existent plain proxy storage area directory as anonymous
  [Tags]  webdav  forbidden  head  anonymous
  [Setup]  Clear all credentials
  ${output}  WebDAV HEAD  ${davEndpoint}  ${X509AUTH_SA}  ${TESTDIR}
  Log  ${output}
  Should Contain  ${output}  403

######## PUT #########

WebDAV PUT file into VOMS proxy storage area as anonymous
  [Tags]  webdav  forbidden  put  anonymous
  [Setup]  Clear all credentials
  ${filename}  Get a unique name
  ${output}  WebDAV PUT data  ${davEndpoint}  ${VOMSAUTH_SA}  ${TESTDIR}/${filename}  test  T
  Log  ${output}
  Should Contain  ${output}  403

WebDAV PUT file into plain proxy storage area as anonymous
  [Tags]  webdav  forbidden  put  anonymous
  [Setup]  Clear all credentials
  ${filename}  Get a unique name
  ${output}  WebDAV PUT data  ${davEndpoint}  ${X509AUTH_SA}  ${TESTDIR}/${filename}  test  T
  Log  ${output}
  Should Contain  ${output}  403

WebDAV PUT file into VOMS proxy storage area with plain proxy
  [Tags]  webdav  forbidden  put  plainproxy
  ${filename}  Get a unique name
  Use certificate and proxy  test0  ${X509AUTH_SA_PROXY}
  ${plainproxy}  Get x509 options for Curl
  ${output}  WebDAV PUT data  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${TESTDIR}/${filename}  test  T  ${plainproxy}
  Log  ${output}
  Should Contain  ${output}  403
  [Teardown]  Clear all credentials

######## DELETE #########

WebDAV DELETE existent VOMS proxy storage area file as anonymous
  [Tags]  webdav  forbidden  delete  vomsproxy  anonymous
  Use certificate and proxy  test0  ${VOMSAUTH_SA_PROXY}
  ${vomsproxy}  Get VOMS proxy options for Curl
  ${filename}  Upload file  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${vomsproxy}
  ${output}  WebDAV DELETE  ${davEndpoint}  ${VOMSAUTH_SA}  ${TESTDIR}/${filename}
  Log  ${output}
  Should Contain  ${output}  403
  [Teardown]  Clear all credentials

WebDAV DELETE existent VOMS proxy storage area file with plain proxy
  [Tags]  webdav  forbidden  delete  vomsproxy  plainproxy
  Use certificate and proxy  test0  ${VOMSAUTH_SA_PROXY}
  ${vomsproxy}  Get VOMS proxy options for Curl
  ${filename}  Upload file  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${vomsproxy}
  Use certificate and proxy  test0  ${X509AUTH_SA_PROXY}
  ${plainproxy}  Get x509 options for Curl
  ${output}  WebDAV DELETE  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${TESTDIR}/${filename}  ${plainproxy}
  Log  ${output}
  Should Contain  ${output}  403
  [Teardown]  Clear all credentials

WebDAV DELETE existent plain proxy storage area file as anonymous
  [Tags]  webdav  forbidden  delete  plainproxy  anonymous
  Use certificate and proxy  test0  ${X509AUTH_SA_PROXY}
  ${plainproxy}  Get x509 options for Curl
  ${filename}  Upload file  ${davSecureEndpoint}  ${X509AUTH_SA}  ${plainproxy}
  ${output}  WebDAV DELETE  ${davEndpoint}  ${X509AUTH_SA}  ${TESTDIR}/${filename}
  Log  ${output}
  Should Contain  ${output}  403
  [Teardown]  Clear all credentials

WebDAV DELETE existent VOMS proxy storage area directory as anonymous
  [Tags]  webdav  forbidden  delete  vomsproxy  anonymous
  ${dirname}  Get a unique name
  Use certificate and proxy  test0  ${VOMSAUTH_SA_PROXY}
  ${vomsproxy}  Get VOMS proxy options for Curl
  ${output}  WebDAV MKCOL  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${TESTDIR}/${dirname}  ${vomsproxy}
  Should Contain  ${output}  201 Created
  ${filename}  Upload file  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${vomsproxy}  ${TESTDIR}/${dirname}
  ${output}  WebDAV DELETE  ${davEndpoint}  ${VOMSAUTH_SA}  ${TESTDIR}/${dirname}
  Log  ${output}
  Should Contain  ${output}  403
  [Teardown]  Clear all credentials

WebDAV DELETE existent VOMS proxy storage area directory with plain proxy
  [Tags]  webdav  forbidden  delete  vomsproxy  plainproxy
  ${dirname}  Get a unique name
  Use certificate and proxy  test0  ${VOMSAUTH_SA_PROXY}
  ${vomsproxy}  Get VOMS proxy options for Curl
  ${output}  WebDAV MKCOL  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${TESTDIR}/${dirname}  ${vomsproxy}
  Should Contain  ${output}  201 Created
  ${filename}  Upload file  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${vomsproxy}  ${TESTDIR}/${dirname}
  Use certificate and proxy  test0  ${X509AUTH_SA_PROXY}
  ${plainproxy}  Get x509 options for Curl
  ${output}  WebDAV DELETE  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${TESTDIR}/${dirname}  ${plainproxy}
  Log  ${output}
  Should Contain  ${output}  403
  [Teardown]  Clear all credentials

WebDAV DELETE existent plain proxy storage area directory as anonymous
  [Tags]  webdav  forbidden  delete  plainproxy  anonymous
  ${dirname}  Get a unique name
  Use certificate and proxy  test0  ${X509AUTH_SA_PROXY}
  ${plainproxy}  Get x509 options for Curl
  ${output}  WebDAV MKCOL  ${davSecureEndpoint}  ${X509AUTH_SA}  ${TESTDIR}/${dirname}  ${plainproxy}
  Should Contain  ${output}  201 Created
  ${filename}  Upload file  ${davSecureEndpoint}  ${X509AUTH_SA}  ${plainproxy}  ${TESTDIR}/${dirname}
  ${output}  WebDAV DELETE  ${davEndpoint}  ${X509AUTH_SA}  ${TESTDIR}/${dirname}
  Log  ${output}
  Should Contain  ${output}  403
  [Teardown]  Clear all credentials

######## MKCOL #########

WebDAV MKCOL into VOMS proxy storage area as anonymous
  [Tags]  webdav  forbidden  mkcol  anonymous
  [Setup]  Clear all credentials
  ${dirname}  Get a unique name
  ${output}  WebDAV MKCOL  ${davEndpoint}  ${VOMSAUTH_SA}  ${TESTDIR}/${dirname}
  Log  ${output}
  Should Contain  ${output}  403

WebDAV MKCOL into plain proxy storage area as anonymous
  [Tags]  webdav  forbidden  mkcol  anonymous
  [Setup]  Clear all credentials
  ${dirname}  Get a unique name
  ${output}  WebDAV MKCOL  ${davEndpoint}  ${X509AUTH_SA}  ${TESTDIR}/${dirname}
  Log  ${output}
  Should Contain  ${output}  403

WebDAV MKCOL into VOMS proxy storage area with plain proxy
  [Tags]  webdav  forbidden  mkcol  plainproxy
  ${dirname}  Get a unique name
  Use certificate and proxy  test0  ${X509AUTH_SA_PROXY}
  ${plainproxy}  Get x509 options for Curl
  ${output}  WebDAV MKCOL  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${TESTDIR}/${dirname}  ${plainproxy}
  Log  ${output}
  Should Contain  ${output}  403
  [Teardown]  Clear all credentials

######## PROPFIND ##########

WebDAV PROPFIND allprop on file into VOMS proxy storage area as anonymous
  [Tags]  webdav  forbidden  propfind  vomsproxy  anonymous
  Use certificate and proxy  test0  ${VOMSAUTH_SA_PROXY}
  ${vomsproxy}  Get VOMS proxy options for Curl
  ${filename}  Upload file  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${vomsproxy}  ${TESTDIR}
  ${bodyvalue}  Get PROPFIND ALLPROP body
  ${output}  WebDAV PROPFIND  ${davEndpoint}  ${VOMSAUTH_SA}  ${TESTDIR}/${filename}  ${bodyvalue}
  Log  ${output}
  Should Not Contain  ${output}  207 Multi-status
  Should Contain  ${output}  403
  [Teardown]  Clear all credentials

WebDAV PROPFIND allprop on file into VOMS proxy storage area with plain proxy
  [Tags]  webdav  forbidden  propfind  vomsproxy  plainproxy
  Use certificate and proxy  test0  ${VOMSAUTH_SA_PROXY}
  ${vomsproxy}  Get VOMS proxy options for Curl
  ${filename}  Upload file  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${vomsproxy}  ${TESTDIR}
  ${bodyvalue}  Get PROPFIND ALLPROP body
  Use certificate and proxy  test0  ${X509AUTH_SA_PROXY}
  ${plainproxy}  Get x509 options for Curl
  ${output}  WebDAV PROPFIND  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${TESTDIR}/${filename}  ${bodyvalue}  ${plainproxy}
  Log  ${output}
  Should Not Contain  ${output}  207 Multi-status
  Should Contain  ${output}  403
  [Teardown]  Clear all credentials

WebDAV PROPFIND allprop on non empty VOMS storage area directory as anonymous
  [Tags]  webdav  forbidden  propfind  vomsproxy  anonymous
  Use certificate and proxy  test0  ${VOMSAUTH_SA_PROXY}
  ${vomsproxy}  Get VOMS proxy options for Curl
  ${dirname}  Get a unique name
  ${output}  WebDAV MKCOL  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${TESTDIR}/${dirname}  ${vomsproxy}
  Should Contain  ${output}  201 Created
  ${subFile1}  Upload file  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${vomsproxy}  ${TESTDIR}/${dirname}
  ${subFile2}  Upload file  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${vomsproxy}  ${TESTDIR}/${dirname}
  ${bodyvalue}  Get PROPFIND ALLPROP body
  ${output}  WebDAV PROPFIND  ${davEndpoint}  ${VOMSAUTH_SA}  ${TESTDIR}/${dirname}  ${bodyvalue}
  Log  ${output}
  Should Not Contain  ${output}  207 Multi-status
  Should Contain  ${output}  403
  [Teardown]  Clear all credentials

WebDAV PROPFIND allprop on non empty VOMS storage area directory with plain proxy
  [Tags]  webdav  forbidden  propfind  vomsproxy  plainproxy
  Use certificate and proxy  test0  ${VOMSAUTH_SA_PROXY}
  ${vomsproxy}  Get VOMS proxy options for Curl
  ${dirname}  Get a unique name
  ${output}  WebDAV MKCOL  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${TESTDIR}/${dirname}  ${vomsproxy}
  Should Contain  ${output}  201 Created
  ${subFile1}  Upload file  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${vomsproxy}  ${TESTDIR}/${dirname}
  ${subFile2}  Upload file  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${vomsproxy}  ${TESTDIR}/${dirname}
  ${bodyvalue}  Get PROPFIND ALLPROP body
  Use certificate and proxy  test0  ${X509AUTH_SA_PROXY}
  ${plainproxy}  Get x509 options for Curl
  ${output}  WebDAV PROPFIND  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${TESTDIR}/${dirname}  ${bodyvalue}  ${plainproxy}
  Log  ${output}
  Should Not Contain  ${output}  207 Multi-status
  Should Contain  ${output}  403
  [Teardown]  Clear all credentials

########## COPY ###########

WebDAV COPY existent VOMS proxy storage area file as anonymous
  [Tags]  webdav  forbidden  copy  vomsproxy  anonymous
  Use certificate and proxy  test0  ${VOMSAUTH_SA_PROXY}
  ${vomsproxy}  Get VOMS proxy options for Curl
  ${filename}  Upload file  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${vomsproxy}
  ${output}  WebDAV COPY  ${davEndpoint}  ${VOMSAUTH_SA}  ${TESTDIR}/${filename}  ${davEndpoint}  ${ANONYMOUS_SA}  ${TESTDIR}/${filename}  T
  Log  ${output}
  Should Contain  ${output}  403
  [Teardown]  Clear all credentials

WebDAV COPY existent VOMS proxy storage area file with plain proxy
  [Tags]  webdav  forbidden  copy  vomsproxy  plainproxy
  Use certificate and proxy  test0  ${VOMSAUTH_SA_PROXY}
  ${vomsproxy}  Get VOMS proxy options for Curl
  ${filename}  Upload file  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${vomsproxy}
  Use certificate and proxy  test0  ${X509AUTH_SA_PROXY}
  ${plainproxy}  Get x509 options for Curl
  ${output}  WebDAV COPY  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${TESTDIR}/${filename}  ${davSecureEndpoint}  ${X509AUTH_SA}  ${TESTDIR}/${filename}  T  ${plainproxy}
  Log  ${output}
  Should Contain  ${output}  403
  [Teardown]  Clear all credentials

WebDAV COPY existent plain proxy storage area file as anonymous
  [Tags]  webdav  forbidden  copy  plainproxy  anonymous
  Use certificate and proxy  test0  ${X509AUTH_SA_PROXY}
  ${plainproxy}  Get x509 options for Curl
  ${filename}  Upload file  ${davSecureEndpoint}  ${X509AUTH_SA}  ${plainproxy}
  ${output}  WebDAV COPY  ${davEndpoint}  ${X509AUTH_SA}  ${TESTDIR}/${filename}  ${davEndpoint}  ${ANONYMOUS_SA}  ${TESTDIR}/${filename}  T
  Log  ${output}
  Should Contain  ${output}  403
  [Teardown]  Clear all credentials

WebDAV COPY existent VOMS proxy storage area directory as anonymous
  [Tags]  webdav  forbidden  copy  vomsproxy  anonymous
  Use certificate and proxy  test0  ${VOMSAUTH_SA_PROXY}
  ${vomsproxy}  Get VOMS proxy options for Curl
  ${dirname}  Get a unique name
  ${output}  WebDAV MKCOL  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${TESTDIR}/${dirname}  ${vomsproxy}
  Should Contain  ${output}  201 Created
  ${subFile1}  Upload file  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${vomsproxy}  ${TESTDIR}/${dirname}
  ${subFile2}  Upload file  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${vomsproxy}  ${TESTDIR}/${dirname}
  ${output}  WebDAV COPY  ${davEndpoint}  ${VOMSAUTH_SA}  ${TESTDIR}/${dirname}  ${davEndpoint}  ${ANONYMOUS_SA}  ${TESTDIR}/${dirname}  T
  Log  ${output}
  Should Contain  ${output}  403
  [Teardown]  Clear all credentials

WebDAV COPY existent VOMS proxy storage area directory with plain proxy
  [Tags]  webdav  forbidden  copy  vomsproxy  plainproxy
  Use certificate and proxy  test0  ${VOMSAUTH_SA_PROXY}
  ${vomsproxy}  Get VOMS proxy options for Curl
  ${dirname}  Get a unique name
  ${output}  WebDAV MKCOL  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${TESTDIR}/${dirname}  ${vomsproxy}
  Should Contain  ${output}  201 Created
  ${subFile1}  Upload file  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${vomsproxy}  ${TESTDIR}/${dirname}
  ${subFile2}  Upload file  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${vomsproxy}  ${TESTDIR}/${dirname}
  Use certificate and proxy  test0  ${X509AUTH_SA_PROXY}
  ${plainproxy}  Get x509 options for Curl
  ${output}  WebDAV COPY  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${TESTDIR}/${dirname}  ${davSecureEndpoint}  ${X509AUTH_SA}  ${TESTDIR}/${dirname}  T  ${plainproxy}
  Log  ${output}
  Should Contain  ${output}  403
  [Teardown]  Clear all credentials

WebDAV COPY existent plain proxy storage area directory as anonymous
  [Tags]  webdav  forbidden  copy  anonymous  plainproxy
  Use certificate and proxy  test0  ${X509AUTH_SA_PROXY}
  ${plainproxy}  Get x509 options for Curl
  ${dirname}  Get a unique name
  ${output}  WebDAV MKCOL  ${davSecureEndpoint}  ${X509AUTH_SA}  ${TESTDIR}/${dirname}  ${plainproxy}
  Should Contain  ${output}  201 Created
  ${subFile1}  Upload file  ${davSecureEndpoint}  ${X509AUTH_SA}  ${plainproxy}  ${TESTDIR}/${dirname}
  ${subFile2}  Upload file  ${davSecureEndpoint}  ${X509AUTH_SA}  ${plainproxy}  ${TESTDIR}/${dirname}
  ${output}  WebDAV COPY  ${davEndpoint}  ${X509AUTH_SA}  ${TESTDIR}/${dirname}  ${davEndpoint}  ${ANONYMOUS_SA}  ${TESTDIR}/${dirname}  T
  Log  ${output}
  Should Contain  ${output}  403
  [Teardown]  Clear all credentials

########## MOVE ###########

WebDAV MOVE existent VOMS proxy storage area resource as anonymous
  [Tags]  webdav  forbidden  move  anonymous  vomsproxy
  Use certificate and proxy  test0  ${VOMSAUTH_SA_PROXY}
  ${vomsproxy}  Get VOMS proxy options for Curl
  ${filename}  Upload file  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${vomsproxy}
  ${output}  WebDAV MOVE  ${davEndpoint}  ${VOMSAUTH_SA}  ${TESTDIR}/${filename}  ${davEndpoint}  ${ANONYMOUS_SA}  ${TESTDIR}/${filename}  T
  Log  ${output}
  Should Contain  ${output}  403
  [Teardown]  Clear all credentials

WebDAV MOVE existent VOMS proxy storage area resource with plain proxy
  [Tags]  webdav  forbidden  move  plainproxy  vomsproxy
  Use certificate and proxy  test0  ${VOMSAUTH_SA_PROXY}
  ${vomsproxy}  Get VOMS proxy options for Curl
  ${filename}  Upload file  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${vomsproxy}
  Use certificate and proxy  test0  ${X509AUTH_SA_PROXY}
  ${plainproxy}  Get x509 options for Curl
  ${output}  WebDAV MOVE  ${davSecureEndpoint}  ${VOMSAUTH_SA}  ${TESTDIR}/${filename}  ${davSecureEndpoint}  ${X509AUTH_SA}  ${TESTDIR}/${filename}  T  ${plainproxy}
  Log  ${output}
  Should Contain  ${output}  403
  [Teardown]  Clear all credentials

WebDAV MOVE existent plain proxy storage area resource as anonymous
  [Tags]  webdav  forbidden  move  anonymous  plainproxy
  Use certificate and proxy  test0  ${X509AUTH_SA_PROXY}
  ${plainproxy}  Get x509 options for Curl
  ${filename}  Upload file  ${davSecureEndpoint}  ${X509AUTH_SA}  ${plainproxy}
  ${output}  WebDAV MOVE  ${davEndpoint}  ${X509AUTH_SA}  ${TESTDIR}/${filename}  ${davEndpoint}  ${ANONYMOUS_SA}  ${TESTDIR}/${filename}  T
  Log  ${output}
  Should Contain  ${output}  403
  [Teardown]  Clear all credentials
