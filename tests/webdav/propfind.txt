*** Settings ***
Resource   lib/stormlib.txt
Resource   lib/clientSRM.txt
Resource   lib/lcg_util.txt
Resource   lib/credentials.txt

*** Test Cases ***

WebDAV PROPFIND on directory as anonymous
  [Tags]  webdav  propfind
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${dirname}  Get a unique name
  ${surl}  Build surl  ${anonymousRWStorageArea}  ${dirname}
  ${output}  Perform mkdir using clientSRM  ${surl}
  Should Contain  ${output}  SRM_SUCCESS
  ${filename}  Create local file
  ${surl2}  Build surl  ${anonymousRWStorageArea}  ${dirname}/${filename}
  Copy-out file using lcg-utils  ${filename}  ${surl2}
  ${body}  Set variable  <?xml version='1.0' encoding='utf-8'?><propfind xmlns='DAV:'><allprop/></propfind>
  ${options}  Set variable  --verbose -X PROPFIND --header 'Content-Type: text/xml'
  ${url}  Set variable  http://${davEndpoint}/${anonymousRWStorageArea}/${dirname}
  ${output}  Execute Curl with options  ${url}  ${options} --data-ascii "${body}"
  Log  ${output}
  Should Contain  ${output}  ${dirname}
  Should Contain  ${output}  ${dirname}/${filename}
  Remove not empty directory using clientSRM  ${anonymousRWStorageArea}  ${dirname}
  [Teardown]  Clear all credentials

WebDAV PROPFIND on directory with voms proxy credentials
  [Tags]  webdav  propfind
  [Setup]  Init certificate and voms proxy  test0  ${vo}
  ${dirname}  Get a unique name
  ${surl}  Build surl  ${vomsproxyRWStorageArea}  ${dirname}
  ${output}  Perform mkdir using clientSRM  ${surl}
  Should Contain  ${output}  SRM_SUCCESS
  ${filename}  Create local file
  ${surl2}  Build surl  ${vomsproxyRWStorageArea}  ${dirname}/${filename}
  Copy-out file using lcg-utils  ${filename}  ${surl2}
  ${body}  Set variable  <?xml version='1.0' encoding='utf-8'?><propfind xmlns='DAV:'><allprop/></propfind>
  ${options}  Set variable  --verbose -X PROPFIND --header 'Content-Type: text/xml'
  ${url}  Set variable  https://${davSecureEndpoint}/${vomsproxyRWStorageArea}/${dirname}
  ${output}  Execute Curl with proxy and options  ${url}  ${options} --data-ascii "${body}"
  Log  ${output}
  Should Contain  ${output}  ${dirname}
  Should Contain  ${output}  ${dirname}/${filename}
  Remove not empty directory using clientSRM  ${vomsproxyRWStorageArea}  ${dirname}
  [Teardown]  Clear all credentials

WebDAV PROPFIND on directory with plain proxy credentials
  [Tags]  webdav  propfind
  [Setup]  Init certificate and plain proxy  test0
  ${dirname}  Get a unique name
  ${surl}  Build surl  ${gridproxyRWStorageArea}  ${dirname}
  ${output}  Perform mkdir using clientSRM  ${surl}
  Should Contain  ${output}  SRM_SUCCESS
  ${filename}  Create local file
  ${surl2}  Build surl  ${gridproxyRWStorageArea}  ${dirname}/${filename}
  Copy-out file using lcg-utils  ${filename}  ${surl2}
  ${body}  Set variable  <?xml version='1.0' encoding='utf-8'?><propfind xmlns='DAV:'><allprop/></propfind>
  ${options}  Set variable  --verbose -X PROPFIND --header 'Content-Type: text/xml'
  ${url}  Set variable  https://${davSecureEndpoint}/${gridproxyRWStorageArea}/${dirname}
  ${output}  Execute Curl with proxy and options  ${url}  ${options} --data-ascii "${body}"
  Log  ${output}
  Should Contain  ${output}  ${dirname}
  Should Contain  ${output}  ${dirname}/${filename}
  Remove not empty directory using clientSRM  ${gridproxyRWStorageArea}  ${dirname}
  [Teardown]  Clear all credentials

WebDAV PROPFIND on directory with personal certificate
  [Tags]  webdav  propfind
  [Setup]  Init certificate with unencrypted key  test0
  ${dirname}  Get a unique name
  ${surl}  Build surl  ${personalcertRWStorageArea}  ${dirname}
  ${output}  Perform mkdir using clientSRM  ${surl}
  Should Contain  ${output}  SRM_SUCCESS
  ${filename}  Create local file
  ${surl2}  Build surl  ${personalcertRWStorageArea}  ${dirname}/${filename}
  Copy-out file using lcg-utils  ${filename}  ${surl2}
  ${body}  Set variable  <?xml version='1.0' encoding='utf-8'?><propfind xmlns='DAV:'><allprop/></propfind>
  ${options}  Set variable  --verbose -X PROPFIND --header 'Content-Type: text/xml'
  ${url}  Set variable  https://${davSecureEndpoint}/${personalcertRWStorageArea}/${dirname}
  ${output}  Execute Curl with certificate and options  ${url}  ${options} --data-ascii "${body}"
  Log  ${output}
  Should Contain  ${output}  ${dirname}
  Should Contain  ${output}  ${dirname}/${filename}
  Remove not empty directory using clientSRM  ${personalcertRWStorageArea}  ${dirname}
  [Teardown]  Clear all credentials