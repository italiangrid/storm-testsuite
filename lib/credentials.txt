*** Setting ***

Library  OperatingSystem
Library  Collections
Resource  lib/stormlib.txt

*** Keywords ***

Use certificate   [Arguments]   ${cert}
  File Should Exist   ${certsDir}/${cert}.cert.pem
  File Should Exist   ${certsDir}/${cert}.key.pem
  Stop using certificate
  Execute and Check Success   cp ${certsDir}/${cert}.cert.pem %{HOME}/.globus/usercert.pem
  Execute and Check Success   cp ${certsDir}/${cert}.key.pem %{HOME}/.globus/userkey.pem
  Execute and Check Success   chmod 400 %{HOME}/.globus/userkey.pem

Use certificate with unencrypted key   [Arguments]   ${cert}
  File Should Exist   ${certsDir}/${cert}.cert.pem
  File Should Exist   ${certsDir}/${cert}.key.pem
  Stop using certificate
  Execute and Check Success   cp ${certsDir}/${cert}.cert.pem %{HOME}/.globus/usercert.pem
  Execute and Check Success   cp ${certsDir}/${cert}.key.pem %{HOME}/.globus/userkey.pem
  Execute and Check Success   openssl rsa -in %{HOME}/.globus/userkey.pem -out %{HOME}/.globus/userkey.pem -passin pass:${privateKeyPassword}
  Execute and Check Success   chmod 400 %{HOME}/.globus/userkey.pem

Stop using certificate
  Run  rm %{HOME}/.globus/usercert.pem
  Run  rm -f %{HOME}/.globus/userkey.pem
  Run  voms-proxy-destroy

Get options list  [Arguments]  @{params}
  ${optionsList}  Set Variable  ${EMPTY}
  :FOR    ${option}   IN   @{params}
   \   ${optionsList} =  Catenate   ${optionsList}   ${option}
  Log Many   ${optionsList}
  [Return]   ${optionsList}

Get proxy info  [Arguments]  @{params}
  ${options}=  Get options list  @{params}
  ${output}=  Run  voms-proxy-info ${options}
  [Return]  ${output}

Create proxy  [Arguments]  @{params}
  ${options}=  Get options list  @{params}
  ${output}  Execute and Check Success  echo ${privateKeyPassword}|voms-proxy-init -pwstdin ${options}
  [Return]  ${output}

Create plain proxy
  Execute and Check Success   echo ${privateKeyPassword} | voms-proxy-init -pwstdin

Destroy proxy   [Arguments]   @{params}
  ${options}=  Get options list   @{params}
  Execute and Check Success   voms-proxy-destroy ${options}

Create voms proxy   [Arguments]   ${vo}=${vo1}
  ${output}   Execute and Check Success   echo ${privateKeyPassword}|voms-proxy-init -pwstdin -voms ${vo}