** Settings ***

Library   OperatingSystem
Resource   lib/credentials.txt
Resource   variables.txt

*** Keywords ***

Execute clientSRM Command  [Arguments]  ${cmd}  ${options}=${EMPTY}
  ${output}  ${stderr}  Execute and Check Success  clientSRM ${cmd} ${options} -e ${srmEndpoint}
  [Return]  ${output}

Execute clientSRM Command on Surl  [Arguments]  ${cmd}  ${surl}  ${options}=${EMPTY}
  ${output}  ${stderr}  Execute and Check Success  clientSRM ${cmd} ${options} -e ${srmEndpoint} -s ${surl}
  [Return]  ${output}

Execute clientSRM Command on Surl with Token  [Arguments]  ${cmd}  ${surl}  ${token}  ${options}=${EMPTY}
  ${output}  ${stderr}  Execute and Check Success  clientSRM ${cmd} ${options} -e ${srmEndpoint} -s ${surl} -t ${token}
  [Return]  ${output}

Execute clientSRM Command with Token  [Arguments]  ${cmd}  ${token}  ${options}=${EMPTY}
  ${output}  ${stderr}  Execute and Check Success  clientSRM ${cmd} ${options} -e ${srmEndpoint} -t ${token}
  [Return]  ${output}

Perform mkdir using clientSRM  [Arguments]  ${surl}  ${options}=${EMPTY}
  ${output}  Execute clientSRM Command on Surl  mkdir  ${surl}  ${options}
  [Return]  ${output}

Perform rm using clientSRM  [Arguments]  ${surl}  ${options}=${EMPTY}
  ${output}  Execute clientSRM Command on Surl  rm  ${surl}  ${options}
  [Return]  ${output}

Perform rmdir using clientSRM  [Arguments]  ${surl}  ${options}=${EMPTY}
  ${output}  Execute clientSRM Command on Surl  rmdir  ${surl}  ${options}
  [Return]  ${output}

Perform ping using clientSRM
  ${output}  Execute clientSRM Command  ping  -e ${srmEndpoint}
  [Return]  ${output}

Perform ptp using clientSRM  [Arguments]  ${surl}  ${options}=${EMPTY}
  ${output}  Execute clientSRM Command on Surl  ptp  ${surl}  ${options}
  ${result}  ${token}=  Should Match Regexp  ${output}  requestToken=(\".+\")
  [Return]  ${output}  ${token}

Perform sptp using clientSRM  [Arguments]  ${surl}  ${token}  ${options}=${EMPTY}
  ${output}  Execute clientSRM Command on Surl with token  sptp  ${surl}  ${token}  ${options}
  [Return]  ${output}

Perform pd using clientSRM  [Arguments]  ${surl}  ${token}  ${options}=${EMPTY}
  ${output}  Execute clientSRM Command on Surl with token  pd  ${surl}  ${token}  ${options}
  [Return]  ${output}

Perform ptg using clientSRM  [Arguments]  ${surl}  ${options}=${EMPTY}
  ${output}  Execute clientSRM Command on Surl  ptg  ${surl}  ${options}
  ${result}  ${token}=  Should Match Regexp  ${output}  requestToken=(\".+\")
  [Return]  ${output}  ${token}

Perform sptg using clientSRM  [Arguments]  ${surl}  ${token}  ${options}=${EMPTY}
  ${output}  Execute clientSRM Command on Surl with token  sptg  ${surl}  ${token}  ${options}
  [Return]  ${output}

Perform rf using clientSRM  [Arguments]  ${surl}  ${token}  ${options}=${EMPTY}
  ${output}  Execute clientSRM Command on Surl with token  rf  ${surl}  ${token}  ${options}
  [Return]  ${output}

Perform rf using clientSRM without token  [Arguments]  ${surl}  ${options}=${EMPTY}
  ${output}  Execute clientSRM Command on Surl  rf  ${surl}  ${options}
  [Return]  ${output}

Perform rf using clientSRM without surl  [Arguments]  ${token}  ${options}=${EMPTY}
  ${output}  Execute clientSRM Command with Token  rf  ${token}  ${options}
  [Return]  ${output}

Perform abort request using clientSRM  [Arguments]  ${token}  ${options}=${EMPTY}
  ${output}  Execute clientSRM Command  AbortRequest  -t ${token} ${options}
  [Return]  ${output}

Perform abort file using clientSRM  [Arguments]  ${surl}  ${token}  ${options}=${EMPTY}
  ${output}  Execute clientSRM Command on Surl with token  AbortFiles  ${surl}  ${token}  ${options}
  [Return]  ${output}

Perform mv using clientSRM  [Arguments]  ${srcsurl}  ${destsurl}  ${options}=${EMPTY}
  ${output}  Execute clientSRM Command  mv -s ${srcsurl} -t ${destsurl}  ${options}
  [Return]  ${output}

Perform ls using clientSRM  [Arguments]  ${surl}  ${options}=${EMPTY}
  ${output}  Execute clientSRM Command on Surl  ls  ${surl}  ${options}
  [Return]  ${output}

Detailed ls using clientSRM  [Arguments]  ${surl}
  ${output}  Perform ls using clientSRM  ${surl}  -l -c 1
  [Return]  ${output}

Get unused size using clientSRM  [Arguments]  ${storageAreaToken}
  ${output}  Execute clientSRM Command  gst  -e httpg://${srmEndpoint}/ -d ${storageAreaToken}
  ${result}  ${token}=  Should Match Regexp  ${output}  (\".+-.+-.+-.+-.+\")
  ${output}  Get space metadata using clientSRM  ${token}
  ${result}  ${unusedSize}=  Should Match Regexp  ${output}  unusedSize=(.+)
  [Return]  ${unusedSize}

Get space metadata using clientSRM  [Arguments]  ${storageAreaToken}
  ${output}  Execute clientSRM Command  gsm  -e httpg://${srmEndpoint}/ -s ${storageAreaToken}
  [Return]  ${output}

Get request summary using clientSRM  [Arguments]  ${token}
  ${output}  Execute clientSRM Command  grs  -e httpg://${srmEndpoint}/ -t ${token}
  [Return]  ${output}

Get request tokens using clientSRM  [Arguments]  ${token}
  ${output}  Execute clientSRM Command  grt  -e httpg://${srmEndpoint}/ -d ${token}
  [Return]  ${output}

Reserve space using clientSRM
  ${output}  Execute clientSRM Command  rs  -e httpg://${srmEndpoint}/ -a 10 -b 5 -r 0,0
  ${result}  ${token}=  Should Match Regexp  ${output}  (\".+-.+-.+-.+-.+\")
  [Return]  ${token}

Reserve space using clientSRM with token  [Arguments]  ${token}
  ${output}  Execute clientSRM Command  rs  -e httpg://${srmEndpoint}/ -a 10 -b 5 -r 0,0 -d ${token}
  [Return]  ${output}

Release space using clientSRM  [Arguments]  ${token}
  ${output}  Execute clientSRM Command  rsp  -e httpg://${srmEndpoint}/ -t ${token} -f 1
  [Return]  ${output}

Create directory using clientSRM  [Arguments]  ${storageArea}  ${path}
  ${surl}  Build Surl  ${storageArea}  ${path}
  ${output}  Perform mkdir using clientSRM  ${surl}
  [Return]  ${output}

Remove empty directory using clientSRM  [Arguments]  ${storageArea}  ${path}
  ${surl}  Build Surl  ${storageArea}  ${path}
  ${output}  Perform rmdir using clientSRM  ${surl}
  [Return]  ${output}

Remove not empty directory using clientSRM  [Arguments]  ${storageArea}  ${path}
  ${surl}  Build Surl  ${storageArea}  ${path}
  ${output}  Perform rmdir using clientSRM  ${surl}  -r
  [Return]  ${output}

Remove file using clientSRM  [Arguments]  ${storageArea}  ${path}
  ${surl}  Build Surl  ${storageArea}  ${path}
  ${output}  Perform rm using clientSRM  ${surl}
  [Return]  ${output}

Put without really putting using clientSRM  [Arguments]  ${surl}
  ${output}  ${token}  Perform ptp using clientSRM  ${surl}  -p
  Should Contain  ${output}  SRM_SPACE_AVAILABLE
  ${output}  Perform pd using clientSRM  ${surl}  ${token}  -p
  Should Contain  ${output}  SRM_SUCCESS
  [Return]  ${output}

List files in directory using clientSRM  [Arguments]  ${storageArea}  ${path}
  ${surl}  Build Surl  ${storageArea}  ${path}
  ${output}  Perform ls using clientSRM  ${surl}
  [Return]  ${output}

Get space token using clientSRM  [Arguments]  ${token}
  ${output}  Execute clientSRM Command  gst -v ES -e httpg://${srmEndpoint} -d ${token}
  ${result}  ${token}=  Should Match Regexp  ${output}  (\".+-.+-.+-.+-.+\")
  [Return]  ${token}

Get space token output using clientSRM  [Arguments]  ${token}
  ${output}  Execute clientSRM Command  gst -v ES -e httpg://${srmEndpoint} -d ${token}
  [Return]  ${output}